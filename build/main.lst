ARM GAS  /tmp/ccK4XUb0.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.cpp"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata._ZL13start_of_velX,"a"
  20              		.align	2
  23              	_ZL13start_of_velX:
  24 0000 8E000000 		.word	142
  25              		.section	.rodata._ZL13start_of_velY,"a"
  26              		.align	2
  29              	_ZL13start_of_velY:
  30 0000 92000000 		.word	146
  31              		.section	.rodata._ZL14start_of_velZ1,"a"
  32              		.align	2
  35              	_ZL14start_of_velZ1:
  36 0000 96000000 		.word	150
  37              		.section	.rodata._ZL14start_of_velZ2,"a"
  38              		.align	2
  41              	_ZL14start_of_velZ2:
  42 0000 9A000000 		.word	154
  43              		.global	t
  44              		.section	.bss.t,"aw",%nobits
  45              		.align	2
  48              	t:
  49 0000 00000000 		.space	4
  50              		.global	data
  51              		.section	.bss.data,"aw",%nobits
  52              		.align	2
  55              	data:
  56 0000 00000000 		.space	400
  56      00000000 
  56      00000000 
  56      00000000 
  56      00000000 
  57              		.global	num
  58              		.section	.bss.num,"aw",%nobits
  59              		.align	2
  62              	num:
  63 0000 00000000 		.space	4
  64              		.section	.text.main,"ax",%progbits
  65              		.align	1
  66              		.global	main
  67              		.syntax unified
ARM GAS  /tmp/ccK4XUb0.s 			page 2


  68              		.thumb
  69              		.thumb_func
  71              	main:
  72              		.fnstart
  73              	.LFB135:
  74              		.file 1 "Core/Src/main.cpp"
   1:Core/Src/main.cpp **** /* USER CODE BEGIN Header */
   2:Core/Src/main.cpp **** /**
   3:Core/Src/main.cpp ****   ******************************************************************************
   4:Core/Src/main.cpp ****   * @file           : main.c
   5:Core/Src/main.cpp ****   * @brief          : Main program body
   6:Core/Src/main.cpp ****   ******************************************************************************
   7:Core/Src/main.cpp ****   * @attention
   8:Core/Src/main.cpp ****   *
   9:Core/Src/main.cpp ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.cpp ****   * All rights reserved.
  11:Core/Src/main.cpp ****   *
  12:Core/Src/main.cpp ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.cpp ****   * in the root directory of this software component.
  14:Core/Src/main.cpp ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.cpp ****   *
  16:Core/Src/main.cpp ****   ******************************************************************************
  17:Core/Src/main.cpp ****   */
  18:Core/Src/main.cpp **** /* USER CODE END Header */
  19:Core/Src/main.cpp **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.cpp **** #include "main.h"
  21:Core/Src/main.cpp **** #include "i2c.h"
  22:Core/Src/main.cpp **** #include "spi.h"
  23:Core/Src/main.cpp **** #include "tim.h"
  24:Core/Src/main.cpp **** #include "usart.h"
  25:Core/Src/main.cpp **** #include "gpio.h"
  26:Core/Src/main.cpp **** #include "dvl_reader.h"
  27:Core/Src/main.cpp **** 
  28:Core/Src/main.cpp **** /* Private includes ----------------------------------------------------------*/
  29:Core/Src/main.cpp **** /* USER CODE BEGIN Includes */
  30:Core/Src/main.cpp **** 
  31:Core/Src/main.cpp **** /* USER CODE END Includes */
  32:Core/Src/main.cpp **** 
  33:Core/Src/main.cpp **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.cpp **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.cpp **** 
  36:Core/Src/main.cpp **** /* USER CODE END PTD */
  37:Core/Src/main.cpp **** 
  38:Core/Src/main.cpp **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.cpp **** /* USER CODE BEGIN PD */
  40:Core/Src/main.cpp **** /* USER CODE END PD */
  41:Core/Src/main.cpp **** 
  42:Core/Src/main.cpp **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.cpp **** /* USER CODE BEGIN PM */
  44:Core/Src/main.cpp **** 
  45:Core/Src/main.cpp **** /* USER CODE END PM */
  46:Core/Src/main.cpp **** 
  47:Core/Src/main.cpp **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.cpp **** 
  49:Core/Src/main.cpp **** /* USER CODE BEGIN PV */
  50:Core/Src/main.cpp **** 
  51:Core/Src/main.cpp **** /* USER CODE END PV */
ARM GAS  /tmp/ccK4XUb0.s 			page 3


  52:Core/Src/main.cpp **** 
  53:Core/Src/main.cpp **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.cpp **** void SystemClock_Config(void);
  55:Core/Src/main.cpp **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.cpp **** 
  57:Core/Src/main.cpp **** /* USER CODE END PFP */
  58:Core/Src/main.cpp **** 
  59:Core/Src/main.cpp **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.cpp **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.cpp **** 
  62:Core/Src/main.cpp **** /* USER CODE END 0 */
  63:Core/Src/main.cpp **** 
  64:Core/Src/main.cpp **** /**
  65:Core/Src/main.cpp ****   * @brief  The application entry point.
  66:Core/Src/main.cpp ****   * @retval int
  67:Core/Src/main.cpp ****   */
  68:Core/Src/main.cpp **** 
  69:Core/Src/main.cpp **** uint8_t t[4];
  70:Core/Src/main.cpp **** float data[100];
  71:Core/Src/main.cpp **** int num =0;
  72:Core/Src/main.cpp **** 
  73:Core/Src/main.cpp **** int main(void)
  74:Core/Src/main.cpp **** {
  75              		.loc 1 74 1
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 248
  78              		@ frame_needed = 1, uses_anonymous_args = 0
  79 0000 80B5     		push	{r7, lr}
  80              		.save {r7, lr}
  81              	.LCFI0:
  82              		.cfi_def_cfa_offset 8
  83              		.cfi_offset 7, -8
  84              		.cfi_offset 14, -4
  85              		.pad #248
  86 0002 BEB0     		sub	sp, sp, #248
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 256
  89              		.setfp r7, sp, #0
  90 0004 00AF     		add	r7, sp, #0
  91              	.LCFI2:
  92              		.cfi_def_cfa_register 7
  75:Core/Src/main.cpp ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.cpp ****   Dvl_reader Dvl;
  93              		.loc 1 76 14
  94 0006 3B1D     		adds	r3, r7, #4
  95 0008 1846     		mov	r0, r3
  96              	.LEHB0:
  97 000a FFF7FEFF 		bl	_ZN10Dvl_readerC1Ev
  98              	.LEHE0:
  77:Core/Src/main.cpp ****   uint8_t temp = 0;
  99              		.loc 1 77 11
 100 000e 0023     		movs	r3, #0
 101 0010 87F8F730 		strb	r3, [r7, #247]
 102              	.LEHB1:
  78:Core/Src/main.cpp ****   float x, y, z1, z2;
  79:Core/Src/main.cpp ****   /* USER CODE END 1 */
  80:Core/Src/main.cpp **** 
ARM GAS  /tmp/ccK4XUb0.s 			page 4


  81:Core/Src/main.cpp ****   /* MCU Configuration--------------------------------------------------------*/
  82:Core/Src/main.cpp **** 
  83:Core/Src/main.cpp ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  84:Core/Src/main.cpp ****   HAL_Init();
 103              		.loc 1 84 11
 104 0014 FFF7FEFF 		bl	HAL_Init
  85:Core/Src/main.cpp **** 
  86:Core/Src/main.cpp ****   /* USER CODE BEGIN Init */
  87:Core/Src/main.cpp **** 
  88:Core/Src/main.cpp ****   /* USER CODE END Init */
  89:Core/Src/main.cpp **** 
  90:Core/Src/main.cpp ****   /* Configure the system clock */
  91:Core/Src/main.cpp ****   SystemClock_Config();
 105              		.loc 1 91 21
 106 0018 FFF7FEFF 		bl	_Z18SystemClock_Configv
  92:Core/Src/main.cpp **** 
  93:Core/Src/main.cpp ****   /* USER CODE BEGIN SysInit */
  94:Core/Src/main.cpp **** 
  95:Core/Src/main.cpp ****   /* USER CODE END SysInit */
  96:Core/Src/main.cpp **** 
  97:Core/Src/main.cpp ****   /* Initialize all configured peripherals */
  98:Core/Src/main.cpp ****   MX_GPIO_Init();
 107              		.loc 1 98 15
 108 001c FFF7FEFF 		bl	MX_GPIO_Init
  99:Core/Src/main.cpp ****   // MX_I2C1_Init();
 100:Core/Src/main.cpp ****   // MX_SPI2_Init();
 101:Core/Src/main.cpp ****   // MX_TIM2_Init();
 102:Core/Src/main.cpp ****   // MX_TIM4_Init();
 103:Core/Src/main.cpp ****   // MX_TIM8_Init();
 104:Core/Src/main.cpp ****   // MX_USART2_UART_Init();
 105:Core/Src/main.cpp ****   MX_USART3_UART_Init();
 109              		.loc 1 105 22
 110 0020 FFF7FEFF 		bl	MX_USART3_UART_Init
 106:Core/Src/main.cpp ****   MX_UART5_Init();
 111              		.loc 1 106 16
 112 0024 FFF7FEFF 		bl	MX_UART5_Init
 107:Core/Src/main.cpp ****   /* USER CODE BEGIN 2 */
 108:Core/Src/main.cpp **** 
 109:Core/Src/main.cpp ****   /* USER CODE END 2 */
 110:Core/Src/main.cpp ****   HAL_UART_Receive_IT(&huart5, t, 4);
 113              		.loc 1 110 22
 114 0028 0422     		movs	r2, #4
 115 002a 0549     		ldr	r1, .L5
 116 002c 0548     		ldr	r0, .L5+4
 117 002e FFF7FEFF 		bl	HAL_UART_Receive_IT
 118              	.LEHE1:
 119              	.L2:
 111:Core/Src/main.cpp ****   /* Infinite loop */
 112:Core/Src/main.cpp ****   /* USER CODE BEGIN WHILE */
 113:Core/Src/main.cpp ****   while (1)
 120              		.loc 1 113 3 discriminator 1
 121 0032 FEE7     		b	.L2
 122              	.L4:
 114:Core/Src/main.cpp ****   {
 115:Core/Src/main.cpp ****     /* USER CODE END WHILE */
 116:Core/Src/main.cpp ****     // if(HAL_UART_Receive(&huart3, Dvl.input, 222, 0) == HAL_OK)
 117:Core/Src/main.cpp ****     //   {
ARM GAS  /tmp/ccK4XUb0.s 			page 5


 118:Core/Src/main.cpp ****     //     temp = 2;
 119:Core/Src/main.cpp ****     //     if(Dvl.input[0] == Dvl.get_delim())
 120:Core/Src/main.cpp ****     //     {
 121:Core/Src/main.cpp ****     //       Dvl.update();
 122:Core/Src/main.cpp ****     //       x = Dvl.get_x();
 123:Core/Src/main.cpp ****     //       y = Dvl.get_y();
 124:Core/Src/main.cpp ****     //       z1 = Dvl.get_z1();
 125:Core/Src/main.cpp ****     //       z2 = Dvl.get_z2();
 126:Core/Src/main.cpp ****     //     }
 127:Core/Src/main.cpp ****     //   }
 128:Core/Src/main.cpp ****       
 129:Core/Src/main.cpp **** 
 130:Core/Src/main.cpp ****       // }
 131:Core/Src/main.cpp ****       
 132:Core/Src/main.cpp ****     /* USER CODE BEGIN 3 */
 133:Core/Src/main.cpp ****   }
 134:Core/Src/main.cpp ****   /* USER CODE END 3 */
 135:Core/Src/main.cpp **** }
 123              		.loc 1 135 1
 124 0034 3B1D     		adds	r3, r7, #4
 125 0036 1846     		mov	r0, r3
 126 0038 FFF7FEFF 		bl	_ZN10Dvl_readerD1Ev
 127              	.LEHB2:
 128 003c FFF7FEFF 		bl	__cxa_end_cleanup
 129              	.LEHE2:
 130              	.L6:
 131              		.align	2
 132              	.L5:
 133 0040 00000000 		.word	t
 134 0044 00000000 		.word	huart5
 135              		.cfi_endproc
 136              	.LFE135:
 137              		.global	__gxx_personality_v0
 138              		.personality	__gxx_personality_v0
 139              		.handlerdata
 140              	.LLSDA135:
 141 000c FF       		.byte	0xff
 142 000d FF       		.byte	0xff
 143 000e 01       		.byte	0x1
 144 000f 0C       		.uleb128 .LLSDACSE135-.LLSDACSB135
 145              	.LLSDACSB135:
 146 0010 0A       		.uleb128 .LEHB0-.LFB135
 147 0011 04       		.uleb128 .LEHE0-.LEHB0
 148 0012 00       		.uleb128 0
 149 0013 00       		.uleb128 0
 150 0014 14       		.uleb128 .LEHB1-.LFB135
 151 0015 1E       		.uleb128 .LEHE1-.LEHB1
 152 0016 34       		.uleb128 .L4-.LFB135
 153 0017 00       		.uleb128 0
 154 0018 3C       		.uleb128 .LEHB2-.LFB135
 155 0019 04       		.uleb128 .LEHE2-.LEHB2
 156 001a 00       		.uleb128 0
 157 001b 00       		.uleb128 0
 158              	.LLSDACSE135:
 159              		.section	.text.main
 160              		.fnend
 162              		.section	.text._Z7receivev,"ax",%progbits
ARM GAS  /tmp/ccK4XUb0.s 			page 6


 163              		.align	1
 164              		.global	_Z7receivev
 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	_Z7receivev:
 170              		.fnstart
 171              	.LFB136:
 136:Core/Src/main.cpp **** 
 137:Core/Src/main.cpp **** float receive(void)
 138:Core/Src/main.cpp **** {
 172              		.loc 1 138 1
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 16
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177 0000 80B4     		push	{r7}
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 4
 180              		.cfi_offset 7, -4
 181 0002 85B0     		sub	sp, sp, #20
 182              	.LCFI4:
 183              		.cfi_def_cfa_offset 24
 184 0004 00AF     		add	r7, sp, #0
 185              	.LCFI5:
 186              		.cfi_def_cfa_register 7
 139:Core/Src/main.cpp **** 	int i;
 140:Core/Src/main.cpp **** 	float n;
 141:Core/Src/main.cpp **** 	char *ch = (char *) &n;
 187              		.loc 1 141 8
 188 0006 3B1D     		adds	r3, r7, #4
 189 0008 BB60     		str	r3, [r7, #8]
 142:Core/Src/main.cpp **** 	for(i=0;i<4;i++)
 190              		.loc 1 142 7
 191 000a 0023     		movs	r3, #0
 192 000c FB60     		str	r3, [r7, #12]
 193              		.loc 1 142 2
 194 000e 0AE0     		b	.L8
 195              	.L9:
 143:Core/Src/main.cpp **** 		ch[i] = t[i];
 196              		.loc 1 143 6 discriminator 3
 197 0010 FB68     		ldr	r3, [r7, #12]
 198              		.loc 1 143 7 discriminator 3
 199 0012 BA68     		ldr	r2, [r7, #8]
 200 0014 1344     		add	r3, r3, r2
 201              		.loc 1 143 14 discriminator 3
 202 0016 0A49     		ldr	r1, .L11
 203 0018 FA68     		ldr	r2, [r7, #12]
 204 001a 0A44     		add	r2, r2, r1
 205 001c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 206              		.loc 1 143 9 discriminator 3
 207 001e 1A70     		strb	r2, [r3]
 142:Core/Src/main.cpp **** 	for(i=0;i<4;i++)
 208              		.loc 1 142 2 discriminator 3
 209 0020 FB68     		ldr	r3, [r7, #12]
 210 0022 0133     		adds	r3, r3, #1
 211 0024 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccK4XUb0.s 			page 7


 212              	.L8:
 142:Core/Src/main.cpp **** 	for(i=0;i<4;i++)
 213              		.loc 1 142 11 discriminator 1
 214 0026 FB68     		ldr	r3, [r7, #12]
 215 0028 032B     		cmp	r3, #3
 216 002a F1DD     		ble	.L9
 144:Core/Src/main.cpp **** 	return n;
 217              		.loc 1 144 9
 218 002c 7B68     		ldr	r3, [r7, #4]	@ float
 219 002e 07EE903A 		vmov	s15, r3
 145:Core/Src/main.cpp **** }
 220              		.loc 1 145 1
 221 0032 B0EE670A 		vmov.f32	s0, s15
 222 0036 1437     		adds	r7, r7, #20
 223              	.LCFI6:
 224              		.cfi_def_cfa_offset 4
 225 0038 BD46     		mov	sp, r7
 226              	.LCFI7:
 227              		.cfi_def_cfa_register 13
 228              		@ sp needed
 229 003a 5DF8047B 		ldr	r7, [sp], #4
 230              	.LCFI8:
 231              		.cfi_restore 7
 232              		.cfi_def_cfa_offset 0
 233 003e 7047     		bx	lr
 234              	.L12:
 235              		.align	2
 236              	.L11:
 237 0040 00000000 		.word	t
 238              		.cfi_endproc
 239              	.LFE136:
 240              		.cantunwind
 241              		.fnend
 243              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 244              		.align	1
 245              		.global	HAL_UART_RxCpltCallback
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 250              	HAL_UART_RxCpltCallback:
 251              		.fnstart
 252              	.LFB137:
 146:Core/Src/main.cpp **** 
 147:Core/Src/main.cpp **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 148:Core/Src/main.cpp **** {
 253              		.loc 1 148 1
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 90B5     		push	{r4, r7, lr}
 258              		.save {r4, r7, lr}
 259              	.LCFI9:
 260              		.cfi_def_cfa_offset 12
 261              		.cfi_offset 4, -12
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264              		.pad #12
ARM GAS  /tmp/ccK4XUb0.s 			page 8


 265 0002 83B0     		sub	sp, sp, #12
 266              	.LCFI10:
 267              		.cfi_def_cfa_offset 24
 268              		.setfp r7, sp, #0
 269 0004 00AF     		add	r7, sp, #0
 270              	.LCFI11:
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 149:Core/Src/main.cpp ****   data[num] = receive();
 273              		.loc 1 149 11
 274 0008 0C4B     		ldr	r3, .L14
 275 000a 1C68     		ldr	r4, [r3]
 276              		.loc 1 149 22
 277 000c FFF7FEFF 		bl	_Z7receivev
 278 0010 F0EE407A 		vmov.f32	s15, s0
 279              		.loc 1 149 13
 280 0014 0A4A     		ldr	r2, .L14+4
 281 0016 A300     		lsls	r3, r4, #2
 282 0018 1344     		add	r3, r3, r2
 283 001a C3ED007A 		vstr.32	s15, [r3]
 150:Core/Src/main.cpp **** 	num++;
 284              		.loc 1 150 5
 285 001e 074B     		ldr	r3, .L14
 286 0020 1B68     		ldr	r3, [r3]
 287 0022 0133     		adds	r3, r3, #1
 288 0024 054A     		ldr	r2, .L14
 289 0026 1360     		str	r3, [r2]
 151:Core/Src/main.cpp **** 	HAL_UART_Receive_IT(&huart5, t, 4);
 290              		.loc 1 151 21
 291 0028 0422     		movs	r2, #4
 292 002a 0649     		ldr	r1, .L14+8
 293 002c 0648     		ldr	r0, .L14+12
 294 002e FFF7FEFF 		bl	HAL_UART_Receive_IT
 152:Core/Src/main.cpp **** }
 295              		.loc 1 152 1
 296 0032 00BF     		nop
 297 0034 0C37     		adds	r7, r7, #12
 298              	.LCFI12:
 299              		.cfi_def_cfa_offset 12
 300 0036 BD46     		mov	sp, r7
 301              	.LCFI13:
 302              		.cfi_def_cfa_register 13
 303              		@ sp needed
 304 0038 90BD     		pop	{r4, r7, pc}
 305              	.L15:
 306 003a 00BF     		.align	2
 307              	.L14:
 308 003c 00000000 		.word	num
 309 0040 00000000 		.word	data
 310 0044 00000000 		.word	t
 311 0048 00000000 		.word	huart5
 312              		.cfi_endproc
 313              	.LFE137:
 314              		.fnend
 316              		.section	.text._Z18SystemClock_Configv,"ax",%progbits
 317              		.align	1
 318              		.global	_Z18SystemClock_Configv
ARM GAS  /tmp/ccK4XUb0.s 			page 9


 319              		.syntax unified
 320              		.thumb
 321              		.thumb_func
 323              	_Z18SystemClock_Configv:
 324              		.fnstart
 325              	.LFB138:
 153:Core/Src/main.cpp **** /**
 154:Core/Src/main.cpp ****   * @brief System Clock Configuration
 155:Core/Src/main.cpp ****   * @retval None
 156:Core/Src/main.cpp ****   */
 157:Core/Src/main.cpp **** void SystemClock_Config(void)
 158:Core/Src/main.cpp **** {
 326              		.loc 1 158 1
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 80
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330 0000 80B5     		push	{r7, lr}
 331              		.save {r7, lr}
 332              	.LCFI14:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 7, -8
 335              		.cfi_offset 14, -4
 336              		.pad #80
 337 0002 94B0     		sub	sp, sp, #80
 338              	.LCFI15:
 339              		.cfi_def_cfa_offset 88
 340              		.setfp r7, sp, #0
 341 0004 00AF     		add	r7, sp, #0
 342              	.LCFI16:
 343              		.cfi_def_cfa_register 7
 159:Core/Src/main.cpp ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 344              		.loc 1 159 22
 345 0006 07F12003 		add	r3, r7, #32
 346 000a 3022     		movs	r2, #48
 347 000c 0021     		movs	r1, #0
 348 000e 1846     		mov	r0, r3
 349 0010 FFF7FEFF 		bl	memset
 160:Core/Src/main.cpp ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 350              		.loc 1 160 22
 351 0014 07F10C03 		add	r3, r7, #12
 352 0018 0022     		movs	r2, #0
 353 001a 1A60     		str	r2, [r3]
 354 001c 5A60     		str	r2, [r3, #4]
 355 001e 9A60     		str	r2, [r3, #8]
 356 0020 DA60     		str	r2, [r3, #12]
 357 0022 1A61     		str	r2, [r3, #16]
 358              	.LBB4:
 161:Core/Src/main.cpp **** 
 162:Core/Src/main.cpp ****   /** Configure the main internal regulator output voltage
 163:Core/Src/main.cpp ****   */
 164:Core/Src/main.cpp ****   __HAL_RCC_PWR_CLK_ENABLE();
 359              		.loc 1 164 3
 360 0024 0023     		movs	r3, #0
 361 0026 BB60     		str	r3, [r7, #8]
 362 0028 2D4B     		ldr	r3, .L20
 363 002a 1B6C     		ldr	r3, [r3, #64]
 364 002c 2C4A     		ldr	r2, .L20
ARM GAS  /tmp/ccK4XUb0.s 			page 10


 365 002e 43F08053 		orr	r3, r3, #268435456
 366 0032 1364     		str	r3, [r2, #64]
 367 0034 2A4B     		ldr	r3, .L20
 368 0036 1B6C     		ldr	r3, [r3, #64]
 369 0038 03F08053 		and	r3, r3, #268435456
 370 003c BB60     		str	r3, [r7, #8]
 371 003e BB68     		ldr	r3, [r7, #8]
 372              	.LBE4:
 373              	.LBB5:
 165:Core/Src/main.cpp ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 374              		.loc 1 165 3
 375 0040 0023     		movs	r3, #0
 376 0042 7B60     		str	r3, [r7, #4]
 377 0044 274B     		ldr	r3, .L20+4
 378 0046 1B68     		ldr	r3, [r3]
 379 0048 264A     		ldr	r2, .L20+4
 380 004a 43F48043 		orr	r3, r3, #16384
 381 004e 1360     		str	r3, [r2]
 382 0050 244B     		ldr	r3, .L20+4
 383 0052 1B68     		ldr	r3, [r3]
 384 0054 03F48043 		and	r3, r3, #16384
 385 0058 7B60     		str	r3, [r7, #4]
 386 005a 7B68     		ldr	r3, [r7, #4]
 387              	.LBE5:
 166:Core/Src/main.cpp **** 
 167:Core/Src/main.cpp ****   /** Initializes the RCC Oscillators according to the specified parameters
 168:Core/Src/main.cpp ****   * in the RCC_OscInitTypeDef structure.
 169:Core/Src/main.cpp ****   */
 170:Core/Src/main.cpp ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 388              		.loc 1 170 36
 389 005c 0123     		movs	r3, #1
 390 005e 3B62     		str	r3, [r7, #32]
 171:Core/Src/main.cpp ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 391              		.loc 1 171 30
 392 0060 4FF48033 		mov	r3, #65536
 393 0064 7B62     		str	r3, [r7, #36]
 172:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 394              		.loc 1 172 34
 395 0066 0223     		movs	r3, #2
 396 0068 BB63     		str	r3, [r7, #56]
 173:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 397              		.loc 1 173 35
 398 006a 4FF48003 		mov	r3, #4194304
 399 006e FB63     		str	r3, [r7, #60]
 174:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLM = 8;
 400              		.loc 1 174 30
 401 0070 0823     		movs	r3, #8
 402 0072 3B64     		str	r3, [r7, #64]
 175:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLN = 336;
 403              		.loc 1 175 30
 404 0074 4FF4A873 		mov	r3, #336
 405 0078 7B64     		str	r3, [r7, #68]
 176:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 406              		.loc 1 176 30
 407 007a 0223     		movs	r3, #2
 408 007c BB64     		str	r3, [r7, #72]
 177:Core/Src/main.cpp ****   RCC_OscInitStruct.PLL.PLLQ = 4;
ARM GAS  /tmp/ccK4XUb0.s 			page 11


 409              		.loc 1 177 30
 410 007e 0423     		movs	r3, #4
 411 0080 FB64     		str	r3, [r7, #76]
 178:Core/Src/main.cpp ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 412              		.loc 1 178 24
 413 0082 07F12003 		add	r3, r7, #32
 414 0086 1846     		mov	r0, r3
 415 0088 FFF7FEFF 		bl	HAL_RCC_OscConfig
 416 008c 0346     		mov	r3, r0
 417              		.loc 1 178 45
 418 008e 002B     		cmp	r3, #0
 419 0090 14BF     		ite	ne
 420 0092 0123     		movne	r3, #1
 421 0094 0023     		moveq	r3, #0
 422 0096 DBB2     		uxtb	r3, r3
 423              		.loc 1 178 3
 424 0098 002B     		cmp	r3, #0
 425 009a 01D0     		beq	.L17
 179:Core/Src/main.cpp ****   {
 180:Core/Src/main.cpp ****     Error_Handler();
 426              		.loc 1 180 18
 427 009c FFF7FEFF 		bl	Error_Handler
 428              	.L17:
 181:Core/Src/main.cpp ****   }
 182:Core/Src/main.cpp **** 
 183:Core/Src/main.cpp ****   /** Initializes the CPU, AHB and APB buses clocks
 184:Core/Src/main.cpp ****   */
 185:Core/Src/main.cpp ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 429              		.loc 1 185 31
 430 00a0 0F23     		movs	r3, #15
 431 00a2 FB60     		str	r3, [r7, #12]
 186:Core/Src/main.cpp ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 187:Core/Src/main.cpp ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 432              		.loc 1 187 34
 433 00a4 0223     		movs	r3, #2
 434 00a6 3B61     		str	r3, [r7, #16]
 188:Core/Src/main.cpp ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 435              		.loc 1 188 35
 436 00a8 0023     		movs	r3, #0
 437 00aa 7B61     		str	r3, [r7, #20]
 189:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 438              		.loc 1 189 36
 439 00ac 4FF4A053 		mov	r3, #5120
 440 00b0 BB61     		str	r3, [r7, #24]
 190:Core/Src/main.cpp ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 441              		.loc 1 190 36
 442 00b2 4FF48053 		mov	r3, #4096
 443 00b6 FB61     		str	r3, [r7, #28]
 191:Core/Src/main.cpp **** 
 192:Core/Src/main.cpp ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 444              		.loc 1 192 26
 445 00b8 07F10C03 		add	r3, r7, #12
 446 00bc 0521     		movs	r1, #5
 447 00be 1846     		mov	r0, r3
 448 00c0 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 449 00c4 0346     		mov	r3, r0
 450              		.loc 1 192 64
ARM GAS  /tmp/ccK4XUb0.s 			page 12


 451 00c6 002B     		cmp	r3, #0
 452 00c8 14BF     		ite	ne
 453 00ca 0123     		movne	r3, #1
 454 00cc 0023     		moveq	r3, #0
 455 00ce DBB2     		uxtb	r3, r3
 456              		.loc 1 192 3
 457 00d0 002B     		cmp	r3, #0
 458 00d2 01D0     		beq	.L19
 193:Core/Src/main.cpp ****   {
 194:Core/Src/main.cpp ****     Error_Handler();
 459              		.loc 1 194 18
 460 00d4 FFF7FEFF 		bl	Error_Handler
 461              	.L19:
 195:Core/Src/main.cpp ****   }
 196:Core/Src/main.cpp **** }
 462              		.loc 1 196 1
 463 00d8 00BF     		nop
 464 00da 5037     		adds	r7, r7, #80
 465              	.LCFI17:
 466              		.cfi_def_cfa_offset 8
 467 00dc BD46     		mov	sp, r7
 468              	.LCFI18:
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
 471 00de 80BD     		pop	{r7, pc}
 472              	.L21:
 473              		.align	2
 474              	.L20:
 475 00e0 00380240 		.word	1073887232
 476 00e4 00700040 		.word	1073770496
 477              		.cfi_endproc
 478              	.LFE138:
 479              		.fnend
 481              		.section	.text.Error_Handler,"ax",%progbits
 482              		.align	1
 483              		.global	Error_Handler
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 488              	Error_Handler:
 489              		.fnstart
 490              	.LFB139:
 197:Core/Src/main.cpp **** 
 198:Core/Src/main.cpp **** /* USER CODE BEGIN 4 */
 199:Core/Src/main.cpp **** 
 200:Core/Src/main.cpp **** /* USER CODE END 4 */
 201:Core/Src/main.cpp **** 
 202:Core/Src/main.cpp **** /**
 203:Core/Src/main.cpp ****   * @brief  This function is executed in case of error occurrence.
 204:Core/Src/main.cpp ****   * @retval None
 205:Core/Src/main.cpp ****   */
 206:Core/Src/main.cpp **** void Error_Handler(void)
 207:Core/Src/main.cpp **** {
 491              		.loc 1 207 1
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccK4XUb0.s 			page 13


 495              		@ link register save eliminated.
 496 0000 80B4     		push	{r7}
 497              	.LCFI19:
 498              		.cfi_def_cfa_offset 4
 499              		.cfi_offset 7, -4
 500 0002 00AF     		add	r7, sp, #0
 501              	.LCFI20:
 502              		.cfi_def_cfa_register 7
 503              	.LBB6:
 504              	.LBB7:
 505              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
ARM GAS  /tmp/ccK4XUb0.s 			page 14


  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccK4XUb0.s 			page 15


 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 506              		.loc 2 142 3
 507              		.syntax unified
 508              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 509 0004 72B6     		cpsid i
 510              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 511              		.loc 2 143 1
 512              		.thumb
 513              		.syntax unified
 514 0006 00BF     		nop
 515              	.L23:
 516              	.LBE7:
 517              	.LBE6:
 208:Core/Src/main.cpp ****   /* USER CODE BEGIN Error_Handler_Debug */
 209:Core/Src/main.cpp ****   /* User can add his own implementation to report the HAL error return state */
 210:Core/Src/main.cpp ****   __disable_irq();
 211:Core/Src/main.cpp ****   while (1)
 518              		.loc 1 211 3 discriminator 1
ARM GAS  /tmp/ccK4XUb0.s 			page 16


 519 0008 FEE7     		b	.L23
 520              		.cfi_endproc
 521              	.LFE139:
 522              		.cantunwind
 523              		.fnend
 525              		.text
 526              	.Letext0:
 527              		.file 3 "/home/zhc/stm32_tool/arm-gnu-toolchain-11.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/inclu
 528              		.file 4 "/home/zhc/stm32_tool/arm-gnu-toolchain-11.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/inclu
 529              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 530              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 531              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 532              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 533              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 534              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 535              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 536              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 537              		.file 13 "Core/Inc/dvl_reader.h"
 538              		.file 14 "Core/Inc/usart.h"
 539              		.file 15 "Core/Inc/gpio.h"
ARM GAS  /tmp/ccK4XUb0.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccK4XUb0.s:20     .rodata._ZL13start_of_velX:0000000000000000 $d
     /tmp/ccK4XUb0.s:23     .rodata._ZL13start_of_velX:0000000000000000 _ZL13start_of_velX
     /tmp/ccK4XUb0.s:26     .rodata._ZL13start_of_velY:0000000000000000 $d
     /tmp/ccK4XUb0.s:29     .rodata._ZL13start_of_velY:0000000000000000 _ZL13start_of_velY
     /tmp/ccK4XUb0.s:32     .rodata._ZL14start_of_velZ1:0000000000000000 $d
     /tmp/ccK4XUb0.s:35     .rodata._ZL14start_of_velZ1:0000000000000000 _ZL14start_of_velZ1
     /tmp/ccK4XUb0.s:38     .rodata._ZL14start_of_velZ2:0000000000000000 $d
     /tmp/ccK4XUb0.s:41     .rodata._ZL14start_of_velZ2:0000000000000000 _ZL14start_of_velZ2
     /tmp/ccK4XUb0.s:48     .bss.t:0000000000000000 t
     /tmp/ccK4XUb0.s:45     .bss.t:0000000000000000 $d
     /tmp/ccK4XUb0.s:55     .bss.data:0000000000000000 data
     /tmp/ccK4XUb0.s:52     .bss.data:0000000000000000 $d
     /tmp/ccK4XUb0.s:62     .bss.num:0000000000000000 num
     /tmp/ccK4XUb0.s:59     .bss.num:0000000000000000 $d
     /tmp/ccK4XUb0.s:65     .text.main:0000000000000000 $t
     /tmp/ccK4XUb0.s:71     .text.main:0000000000000000 main
     /tmp/ccK4XUb0.s:323    .text._Z18SystemClock_Configv:0000000000000000 _Z18SystemClock_Configv
     /tmp/ccK4XUb0.s:133    .text.main:0000000000000040 $d
             .ARM.extab.text.main:0000000000000000 $d
             .ARM.exidx.text.main:0000000000000000 $d
     /tmp/ccK4XUb0.s:163    .text._Z7receivev:0000000000000000 $t
     /tmp/ccK4XUb0.s:169    .text._Z7receivev:0000000000000000 _Z7receivev
     /tmp/ccK4XUb0.s:237    .text._Z7receivev:0000000000000040 $d
      .ARM.exidx.text._Z7receivev:0000000000000000 $d
     /tmp/ccK4XUb0.s:244    .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccK4XUb0.s:250    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccK4XUb0.s:308    .text.HAL_UART_RxCpltCallback:000000000000003c $d
.ARM.extab.text.HAL_UART_RxCpltCallback:0000000000000000 $d
.ARM.exidx.text.HAL_UART_RxCpltCallback:0000000000000000 $d
     /tmp/ccK4XUb0.s:317    .text._Z18SystemClock_Configv:0000000000000000 $t
     /tmp/ccK4XUb0.s:488    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccK4XUb0.s:475    .text._Z18SystemClock_Configv:00000000000000e0 $d
.ARM.extab.text._Z18SystemClock_Configv:0000000000000000 $d
.ARM.exidx.text._Z18SystemClock_Configv:0000000000000000 $d
     /tmp/ccK4XUb0.s:482    .text.Error_Handler:0000000000000000 $t
    .ARM.exidx.text.Error_Handler:0000000000000000 $d

UNDEFINED SYMBOLS
_ZN10Dvl_readerC1Ev
HAL_Init
MX_GPIO_Init
MX_USART3_UART_Init
MX_UART5_Init
HAL_UART_Receive_IT
_ZN10Dvl_readerD1Ev
__cxa_end_cleanup
huart5
__gxx_personality_v0
__aeabi_unwind_cpp_pr1
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
