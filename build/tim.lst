ARM GAS  /tmp/ccYwpN3Z.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	htim2
  20              		.section	.bss.htim2,"aw",%nobits
  21              		.align	2
  24              	htim2:
  25 0000 00000000 		.space	72
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	htim4
  27              		.section	.bss.htim4,"aw",%nobits
  28              		.align	2
  31              	htim4:
  32 0000 00000000 		.space	72
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.global	htim8
  34              		.section	.bss.htim8,"aw",%nobits
  35              		.align	2
  38              	htim8:
  39 0000 00000000 		.space	72
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.section	.text.MX_TIM2_Init,"ax",%progbits
  41              		.align	1
  42              		.global	MX_TIM2_Init
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	MX_TIM2_Init:
  48              	.LFB130:
  49              		.file 1 "Core/Src/tim.c"
   1:Core/Src/tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/tim.c **** /**
   3:Core/Src/tim.c ****   ******************************************************************************
ARM GAS  /tmp/ccYwpN3Z.s 			page 2


   4:Core/Src/tim.c ****   * @file    tim.c
   5:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/tim.c ****   *          of the TIM instances.
   7:Core/Src/tim.c ****   ******************************************************************************
   8:Core/Src/tim.c ****   * @attention
   9:Core/Src/tim.c ****   *
  10:Core/Src/tim.c ****   * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/tim.c ****   * All rights reserved.
  12:Core/Src/tim.c ****   *
  13:Core/Src/tim.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/tim.c ****   * in the root directory of this software component.
  15:Core/Src/tim.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** /* USER CODE END Header */
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim2;
  28:Core/Src/tim.c **** TIM_HandleTypeDef htim4;
  29:Core/Src/tim.c **** TIM_HandleTypeDef htim8;
  30:Core/Src/tim.c **** 
  31:Core/Src/tim.c **** /* TIM2 init function */
  32:Core/Src/tim.c **** void MX_TIM2_Init(void)
  33:Core/Src/tim.c **** {
  50              		.loc 1 33 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 56
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 80B5     		push	{r7, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 0002 8EB0     		sub	sp, sp, #56
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 64
  62 0004 00AF     		add	r7, sp, #0
  63              	.LCFI2:
  64              		.cfi_def_cfa_register 7
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 0 */
  38:Core/Src/tim.c **** 
  39:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  65              		.loc 1 39 26
  66 0006 07F12803 		add	r3, r7, #40
  67 000a 0022     		movs	r2, #0
  68 000c 1A60     		str	r2, [r3]
  69 000e 5A60     		str	r2, [r3, #4]
  70 0010 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccYwpN3Z.s 			page 3


  71 0012 DA60     		str	r2, [r3, #12]
  40:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  72              		.loc 1 40 27
  73 0014 07F12003 		add	r3, r7, #32
  74 0018 0022     		movs	r2, #0
  75 001a 1A60     		str	r2, [r3]
  76 001c 5A60     		str	r2, [r3, #4]
  41:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  77              		.loc 1 41 22
  78 001e 3B1D     		adds	r3, r7, #4
  79 0020 0022     		movs	r2, #0
  80 0022 1A60     		str	r2, [r3]
  81 0024 5A60     		str	r2, [r3, #4]
  82 0026 9A60     		str	r2, [r3, #8]
  83 0028 DA60     		str	r2, [r3, #12]
  84 002a 1A61     		str	r2, [r3, #16]
  85 002c 5A61     		str	r2, [r3, #20]
  86 002e 9A61     		str	r2, [r3, #24]
  42:Core/Src/tim.c **** 
  43:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 1 */
  44:Core/Src/tim.c **** 
  45:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 1 */
  46:Core/Src/tim.c ****   htim2.Instance = TIM2;
  87              		.loc 1 46 18
  88 0030 3D4B     		ldr	r3, .L10
  89 0032 4FF08042 		mov	r2, #1073741824
  90 0036 1A60     		str	r2, [r3]
  47:Core/Src/tim.c ****   htim2.Init.Prescaler = 84-1;
  91              		.loc 1 47 24
  92 0038 3B4B     		ldr	r3, .L10
  93 003a 5322     		movs	r2, #83
  94 003c 5A60     		str	r2, [r3, #4]
  48:Core/Src/tim.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
  95              		.loc 1 48 26
  96 003e 3A4B     		ldr	r3, .L10
  97 0040 0022     		movs	r2, #0
  98 0042 9A60     		str	r2, [r3, #8]
  49:Core/Src/tim.c ****   htim2.Init.Period = 3000-1;
  99              		.loc 1 49 21
 100 0044 384B     		ldr	r3, .L10
 101 0046 40F6B732 		movw	r2, #2999
 102 004a DA60     		str	r2, [r3, #12]
  50:Core/Src/tim.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 103              		.loc 1 50 28
 104 004c 364B     		ldr	r3, .L10
 105 004e 0022     		movs	r2, #0
 106 0050 1A61     		str	r2, [r3, #16]
  51:Core/Src/tim.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 107              		.loc 1 51 32
 108 0052 354B     		ldr	r3, .L10
 109 0054 0022     		movs	r2, #0
 110 0056 9A61     		str	r2, [r3, #24]
  52:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 111              		.loc 1 52 7
 112 0058 3348     		ldr	r0, .L10
 113 005a FFF7FEFF 		bl	HAL_TIM_Base_Init
 114 005e 0346     		mov	r3, r0
ARM GAS  /tmp/ccYwpN3Z.s 			page 4


 115              		.loc 1 52 6
 116 0060 002B     		cmp	r3, #0
 117 0062 01D0     		beq	.L2
  53:Core/Src/tim.c ****   {
  54:Core/Src/tim.c ****     Error_Handler();
 118              		.loc 1 54 5
 119 0064 FFF7FEFF 		bl	Error_Handler
 120              	.L2:
  55:Core/Src/tim.c ****   }
  56:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 121              		.loc 1 56 34
 122 0068 4FF48053 		mov	r3, #4096
 123 006c BB62     		str	r3, [r7, #40]
  57:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 124              		.loc 1 57 7
 125 006e 07F12803 		add	r3, r7, #40
 126 0072 1946     		mov	r1, r3
 127 0074 2C48     		ldr	r0, .L10
 128 0076 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 129 007a 0346     		mov	r3, r0
 130              		.loc 1 57 6
 131 007c 002B     		cmp	r3, #0
 132 007e 01D0     		beq	.L3
  58:Core/Src/tim.c ****   {
  59:Core/Src/tim.c ****     Error_Handler();
 133              		.loc 1 59 5
 134 0080 FFF7FEFF 		bl	Error_Handler
 135              	.L3:
  60:Core/Src/tim.c ****   }
  61:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 136              		.loc 1 61 7
 137 0084 2848     		ldr	r0, .L10
 138 0086 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 139 008a 0346     		mov	r3, r0
 140              		.loc 1 61 6
 141 008c 002B     		cmp	r3, #0
 142 008e 01D0     		beq	.L4
  62:Core/Src/tim.c ****   {
  63:Core/Src/tim.c ****     Error_Handler();
 143              		.loc 1 63 5
 144 0090 FFF7FEFF 		bl	Error_Handler
 145              	.L4:
  64:Core/Src/tim.c ****   }
  65:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 146              		.loc 1 65 37
 147 0094 0023     		movs	r3, #0
 148 0096 3B62     		str	r3, [r7, #32]
  66:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 149              		.loc 1 66 33
 150 0098 0023     		movs	r3, #0
 151 009a 7B62     		str	r3, [r7, #36]
  67:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 152              		.loc 1 67 7
 153 009c 07F12003 		add	r3, r7, #32
 154 00a0 1946     		mov	r1, r3
 155 00a2 2148     		ldr	r0, .L10
 156 00a4 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  /tmp/ccYwpN3Z.s 			page 5


 157 00a8 0346     		mov	r3, r0
 158              		.loc 1 67 6
 159 00aa 002B     		cmp	r3, #0
 160 00ac 01D0     		beq	.L5
  68:Core/Src/tim.c ****   {
  69:Core/Src/tim.c ****     Error_Handler();
 161              		.loc 1 69 5
 162 00ae FFF7FEFF 		bl	Error_Handler
 163              	.L5:
  70:Core/Src/tim.c ****   }
  71:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 164              		.loc 1 71 20
 165 00b2 6023     		movs	r3, #96
 166 00b4 7B60     		str	r3, [r7, #4]
  72:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 167              		.loc 1 72 19
 168 00b6 0023     		movs	r3, #0
 169 00b8 BB60     		str	r3, [r7, #8]
  73:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 170              		.loc 1 73 24
 171 00ba 0023     		movs	r3, #0
 172 00bc FB60     		str	r3, [r7, #12]
  74:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 173              		.loc 1 74 24
 174 00be 0023     		movs	r3, #0
 175 00c0 7B61     		str	r3, [r7, #20]
  75:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 176              		.loc 1 75 7
 177 00c2 3B1D     		adds	r3, r7, #4
 178 00c4 0022     		movs	r2, #0
 179 00c6 1946     		mov	r1, r3
 180 00c8 1748     		ldr	r0, .L10
 181 00ca FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 182 00ce 0346     		mov	r3, r0
 183              		.loc 1 75 6
 184 00d0 002B     		cmp	r3, #0
 185 00d2 01D0     		beq	.L6
  76:Core/Src/tim.c ****   {
  77:Core/Src/tim.c ****     Error_Handler();
 186              		.loc 1 77 5
 187 00d4 FFF7FEFF 		bl	Error_Handler
 188              	.L6:
  78:Core/Src/tim.c ****   }
  79:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 189              		.loc 1 79 7
 190 00d8 3B1D     		adds	r3, r7, #4
 191 00da 0422     		movs	r2, #4
 192 00dc 1946     		mov	r1, r3
 193 00de 1248     		ldr	r0, .L10
 194 00e0 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 195 00e4 0346     		mov	r3, r0
 196              		.loc 1 79 6
 197 00e6 002B     		cmp	r3, #0
 198 00e8 01D0     		beq	.L7
  80:Core/Src/tim.c ****   {
  81:Core/Src/tim.c ****     Error_Handler();
 199              		.loc 1 81 5
ARM GAS  /tmp/ccYwpN3Z.s 			page 6


 200 00ea FFF7FEFF 		bl	Error_Handler
 201              	.L7:
  82:Core/Src/tim.c ****   }
  83:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 202              		.loc 1 83 7
 203 00ee 3B1D     		adds	r3, r7, #4
 204 00f0 0822     		movs	r2, #8
 205 00f2 1946     		mov	r1, r3
 206 00f4 0C48     		ldr	r0, .L10
 207 00f6 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 208 00fa 0346     		mov	r3, r0
 209              		.loc 1 83 6
 210 00fc 002B     		cmp	r3, #0
 211 00fe 01D0     		beq	.L8
  84:Core/Src/tim.c ****   {
  85:Core/Src/tim.c ****     Error_Handler();
 212              		.loc 1 85 5
 213 0100 FFF7FEFF 		bl	Error_Handler
 214              	.L8:
  86:Core/Src/tim.c ****   }
  87:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 215              		.loc 1 87 7
 216 0104 3B1D     		adds	r3, r7, #4
 217 0106 0C22     		movs	r2, #12
 218 0108 1946     		mov	r1, r3
 219 010a 0748     		ldr	r0, .L10
 220 010c FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 221 0110 0346     		mov	r3, r0
 222              		.loc 1 87 6
 223 0112 002B     		cmp	r3, #0
 224 0114 01D0     		beq	.L9
  88:Core/Src/tim.c ****   {
  89:Core/Src/tim.c ****     Error_Handler();
 225              		.loc 1 89 5
 226 0116 FFF7FEFF 		bl	Error_Handler
 227              	.L9:
  90:Core/Src/tim.c ****   }
  91:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_Init 2 */
  92:Core/Src/tim.c **** 
  93:Core/Src/tim.c ****   /* USER CODE END TIM2_Init 2 */
  94:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim2);
 228              		.loc 1 94 3
 229 011a 0348     		ldr	r0, .L10
 230 011c FFF7FEFF 		bl	HAL_TIM_MspPostInit
  95:Core/Src/tim.c **** 
  96:Core/Src/tim.c **** }
 231              		.loc 1 96 1
 232 0120 00BF     		nop
 233 0122 3837     		adds	r7, r7, #56
 234              	.LCFI3:
 235              		.cfi_def_cfa_offset 8
 236 0124 BD46     		mov	sp, r7
 237              	.LCFI4:
 238              		.cfi_def_cfa_register 13
 239              		@ sp needed
 240 0126 80BD     		pop	{r7, pc}
 241              	.L11:
ARM GAS  /tmp/ccYwpN3Z.s 			page 7


 242              		.align	2
 243              	.L10:
 244 0128 00000000 		.word	htim2
 245              		.cfi_endproc
 246              	.LFE130:
 248              		.section	.text.MX_TIM4_Init,"ax",%progbits
 249              		.align	1
 250              		.global	MX_TIM4_Init
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 255              	MX_TIM4_Init:
 256              	.LFB131:
  97:Core/Src/tim.c **** /* TIM4 init function */
  98:Core/Src/tim.c **** void MX_TIM4_Init(void)
  99:Core/Src/tim.c **** {
 257              		.loc 1 99 1
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 56
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              	.LCFI5:
 263              		.cfi_def_cfa_offset 8
 264              		.cfi_offset 7, -8
 265              		.cfi_offset 14, -4
 266 0002 8EB0     		sub	sp, sp, #56
 267              	.LCFI6:
 268              		.cfi_def_cfa_offset 64
 269 0004 00AF     		add	r7, sp, #0
 270              	.LCFI7:
 271              		.cfi_def_cfa_register 7
 100:Core/Src/tim.c **** 
 101:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 102:Core/Src/tim.c **** 
 103:Core/Src/tim.c ****   /* USER CODE END TIM4_Init 0 */
 104:Core/Src/tim.c **** 
 105:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 272              		.loc 1 105 26
 273 0006 07F12803 		add	r3, r7, #40
 274 000a 0022     		movs	r2, #0
 275 000c 1A60     		str	r2, [r3]
 276 000e 5A60     		str	r2, [r3, #4]
 277 0010 9A60     		str	r2, [r3, #8]
 278 0012 DA60     		str	r2, [r3, #12]
 106:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 279              		.loc 1 106 27
 280 0014 07F12003 		add	r3, r7, #32
 281 0018 0022     		movs	r2, #0
 282 001a 1A60     		str	r2, [r3]
 283 001c 5A60     		str	r2, [r3, #4]
 107:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 284              		.loc 1 107 22
 285 001e 3B1D     		adds	r3, r7, #4
 286 0020 0022     		movs	r2, #0
 287 0022 1A60     		str	r2, [r3]
 288 0024 5A60     		str	r2, [r3, #4]
 289 0026 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccYwpN3Z.s 			page 8


 290 0028 DA60     		str	r2, [r3, #12]
 291 002a 1A61     		str	r2, [r3, #16]
 292 002c 5A61     		str	r2, [r3, #20]
 293 002e 9A61     		str	r2, [r3, #24]
 108:Core/Src/tim.c **** 
 109:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 110:Core/Src/tim.c **** 
 111:Core/Src/tim.c ****   /* USER CODE END TIM4_Init 1 */
 112:Core/Src/tim.c ****   htim4.Instance = TIM4;
 294              		.loc 1 112 18
 295 0030 3D4B     		ldr	r3, .L21
 296 0032 3E4A     		ldr	r2, .L21+4
 297 0034 1A60     		str	r2, [r3]
 113:Core/Src/tim.c ****   htim4.Init.Prescaler = 84-1;
 298              		.loc 1 113 24
 299 0036 3C4B     		ldr	r3, .L21
 300 0038 5322     		movs	r2, #83
 301 003a 5A60     		str	r2, [r3, #4]
 114:Core/Src/tim.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 302              		.loc 1 114 26
 303 003c 3A4B     		ldr	r3, .L21
 304 003e 0022     		movs	r2, #0
 305 0040 9A60     		str	r2, [r3, #8]
 115:Core/Src/tim.c ****   htim4.Init.Period = 3000-1;
 306              		.loc 1 115 21
 307 0042 394B     		ldr	r3, .L21
 308 0044 40F6B732 		movw	r2, #2999
 309 0048 DA60     		str	r2, [r3, #12]
 116:Core/Src/tim.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 310              		.loc 1 116 28
 311 004a 374B     		ldr	r3, .L21
 312 004c 0022     		movs	r2, #0
 313 004e 1A61     		str	r2, [r3, #16]
 117:Core/Src/tim.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 314              		.loc 1 117 32
 315 0050 354B     		ldr	r3, .L21
 316 0052 0022     		movs	r2, #0
 317 0054 9A61     		str	r2, [r3, #24]
 118:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 318              		.loc 1 118 7
 319 0056 3448     		ldr	r0, .L21
 320 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 321 005c 0346     		mov	r3, r0
 322              		.loc 1 118 6
 323 005e 002B     		cmp	r3, #0
 324 0060 01D0     		beq	.L13
 119:Core/Src/tim.c ****   {
 120:Core/Src/tim.c ****     Error_Handler();
 325              		.loc 1 120 5
 326 0062 FFF7FEFF 		bl	Error_Handler
 327              	.L13:
 121:Core/Src/tim.c ****   }
 122:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 328              		.loc 1 122 34
 329 0066 4FF48053 		mov	r3, #4096
 330 006a BB62     		str	r3, [r7, #40]
 123:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
ARM GAS  /tmp/ccYwpN3Z.s 			page 9


 331              		.loc 1 123 7
 332 006c 07F12803 		add	r3, r7, #40
 333 0070 1946     		mov	r1, r3
 334 0072 2D48     		ldr	r0, .L21
 335 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 336 0078 0346     		mov	r3, r0
 337              		.loc 1 123 6
 338 007a 002B     		cmp	r3, #0
 339 007c 01D0     		beq	.L14
 124:Core/Src/tim.c ****   {
 125:Core/Src/tim.c ****     Error_Handler();
 340              		.loc 1 125 5
 341 007e FFF7FEFF 		bl	Error_Handler
 342              	.L14:
 126:Core/Src/tim.c ****   }
 127:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 343              		.loc 1 127 7
 344 0082 2948     		ldr	r0, .L21
 345 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 346 0088 0346     		mov	r3, r0
 347              		.loc 1 127 6
 348 008a 002B     		cmp	r3, #0
 349 008c 01D0     		beq	.L15
 128:Core/Src/tim.c ****   {
 129:Core/Src/tim.c ****     Error_Handler();
 350              		.loc 1 129 5
 351 008e FFF7FEFF 		bl	Error_Handler
 352              	.L15:
 130:Core/Src/tim.c ****   }
 131:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 353              		.loc 1 131 37
 354 0092 0023     		movs	r3, #0
 355 0094 3B62     		str	r3, [r7, #32]
 132:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 356              		.loc 1 132 33
 357 0096 0023     		movs	r3, #0
 358 0098 7B62     		str	r3, [r7, #36]
 133:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 359              		.loc 1 133 7
 360 009a 07F12003 		add	r3, r7, #32
 361 009e 1946     		mov	r1, r3
 362 00a0 2148     		ldr	r0, .L21
 363 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 364 00a6 0346     		mov	r3, r0
 365              		.loc 1 133 6
 366 00a8 002B     		cmp	r3, #0
 367 00aa 01D0     		beq	.L16
 134:Core/Src/tim.c ****   {
 135:Core/Src/tim.c ****     Error_Handler();
 368              		.loc 1 135 5
 369 00ac FFF7FEFF 		bl	Error_Handler
 370              	.L16:
 136:Core/Src/tim.c ****   }
 137:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 371              		.loc 1 137 20
 372 00b0 6023     		movs	r3, #96
 373 00b2 7B60     		str	r3, [r7, #4]
ARM GAS  /tmp/ccYwpN3Z.s 			page 10


 138:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
 374              		.loc 1 138 19
 375 00b4 0023     		movs	r3, #0
 376 00b6 BB60     		str	r3, [r7, #8]
 139:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 377              		.loc 1 139 24
 378 00b8 0023     		movs	r3, #0
 379 00ba FB60     		str	r3, [r7, #12]
 140:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 380              		.loc 1 140 24
 381 00bc 0023     		movs	r3, #0
 382 00be 7B61     		str	r3, [r7, #20]
 141:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 383              		.loc 1 141 7
 384 00c0 3B1D     		adds	r3, r7, #4
 385 00c2 0022     		movs	r2, #0
 386 00c4 1946     		mov	r1, r3
 387 00c6 1848     		ldr	r0, .L21
 388 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 389 00cc 0346     		mov	r3, r0
 390              		.loc 1 141 6
 391 00ce 002B     		cmp	r3, #0
 392 00d0 01D0     		beq	.L17
 142:Core/Src/tim.c ****   {
 143:Core/Src/tim.c ****     Error_Handler();
 393              		.loc 1 143 5
 394 00d2 FFF7FEFF 		bl	Error_Handler
 395              	.L17:
 144:Core/Src/tim.c ****   }
 145:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 396              		.loc 1 145 7
 397 00d6 3B1D     		adds	r3, r7, #4
 398 00d8 0422     		movs	r2, #4
 399 00da 1946     		mov	r1, r3
 400 00dc 1248     		ldr	r0, .L21
 401 00de FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 402 00e2 0346     		mov	r3, r0
 403              		.loc 1 145 6
 404 00e4 002B     		cmp	r3, #0
 405 00e6 01D0     		beq	.L18
 146:Core/Src/tim.c ****   {
 147:Core/Src/tim.c ****     Error_Handler();
 406              		.loc 1 147 5
 407 00e8 FFF7FEFF 		bl	Error_Handler
 408              	.L18:
 148:Core/Src/tim.c ****   }
 149:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 409              		.loc 1 149 7
 410 00ec 3B1D     		adds	r3, r7, #4
 411 00ee 0822     		movs	r2, #8
 412 00f0 1946     		mov	r1, r3
 413 00f2 0D48     		ldr	r0, .L21
 414 00f4 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 415 00f8 0346     		mov	r3, r0
 416              		.loc 1 149 6
 417 00fa 002B     		cmp	r3, #0
 418 00fc 01D0     		beq	.L19
ARM GAS  /tmp/ccYwpN3Z.s 			page 11


 150:Core/Src/tim.c ****   {
 151:Core/Src/tim.c ****     Error_Handler();
 419              		.loc 1 151 5
 420 00fe FFF7FEFF 		bl	Error_Handler
 421              	.L19:
 152:Core/Src/tim.c ****   }
 153:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 422              		.loc 1 153 7
 423 0102 3B1D     		adds	r3, r7, #4
 424 0104 0C22     		movs	r2, #12
 425 0106 1946     		mov	r1, r3
 426 0108 0748     		ldr	r0, .L21
 427 010a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 428 010e 0346     		mov	r3, r0
 429              		.loc 1 153 6
 430 0110 002B     		cmp	r3, #0
 431 0112 01D0     		beq	.L20
 154:Core/Src/tim.c ****   {
 155:Core/Src/tim.c ****     Error_Handler();
 432              		.loc 1 155 5
 433 0114 FFF7FEFF 		bl	Error_Handler
 434              	.L20:
 156:Core/Src/tim.c ****   }
 157:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 158:Core/Src/tim.c **** 
 159:Core/Src/tim.c ****   /* USER CODE END TIM4_Init 2 */
 160:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim4);
 435              		.loc 1 160 3
 436 0118 0348     		ldr	r0, .L21
 437 011a FFF7FEFF 		bl	HAL_TIM_MspPostInit
 161:Core/Src/tim.c **** 
 162:Core/Src/tim.c **** }
 438              		.loc 1 162 1
 439 011e 00BF     		nop
 440 0120 3837     		adds	r7, r7, #56
 441              	.LCFI8:
 442              		.cfi_def_cfa_offset 8
 443 0122 BD46     		mov	sp, r7
 444              	.LCFI9:
 445              		.cfi_def_cfa_register 13
 446              		@ sp needed
 447 0124 80BD     		pop	{r7, pc}
 448              	.L22:
 449 0126 00BF     		.align	2
 450              	.L21:
 451 0128 00000000 		.word	htim4
 452 012c 00080040 		.word	1073743872
 453              		.cfi_endproc
 454              	.LFE131:
 456              		.section	.text.MX_TIM8_Init,"ax",%progbits
 457              		.align	1
 458              		.global	MX_TIM8_Init
 459              		.syntax unified
 460              		.thumb
 461              		.thumb_func
 463              	MX_TIM8_Init:
 464              	.LFB132:
ARM GAS  /tmp/ccYwpN3Z.s 			page 12


 163:Core/Src/tim.c **** /* TIM8 init function */
 164:Core/Src/tim.c **** void MX_TIM8_Init(void)
 165:Core/Src/tim.c **** {
 465              		.loc 1 165 1
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 88
 468              		@ frame_needed = 1, uses_anonymous_args = 0
 469 0000 80B5     		push	{r7, lr}
 470              	.LCFI10:
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 96B0     		sub	sp, sp, #88
 475              	.LCFI11:
 476              		.cfi_def_cfa_offset 96
 477 0004 00AF     		add	r7, sp, #0
 478              	.LCFI12:
 479              		.cfi_def_cfa_register 7
 166:Core/Src/tim.c **** 
 167:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 0 */
 168:Core/Src/tim.c **** 
 169:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 0 */
 170:Core/Src/tim.c **** 
 171:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 480              		.loc 1 171 26
 481 0006 07F14803 		add	r3, r7, #72
 482 000a 0022     		movs	r2, #0
 483 000c 1A60     		str	r2, [r3]
 484 000e 5A60     		str	r2, [r3, #4]
 485 0010 9A60     		str	r2, [r3, #8]
 486 0012 DA60     		str	r2, [r3, #12]
 172:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 487              		.loc 1 172 27
 488 0014 07F14003 		add	r3, r7, #64
 489 0018 0022     		movs	r2, #0
 490 001a 1A60     		str	r2, [r3]
 491 001c 5A60     		str	r2, [r3, #4]
 173:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 492              		.loc 1 173 22
 493 001e 07F12403 		add	r3, r7, #36
 494 0022 0022     		movs	r2, #0
 495 0024 1A60     		str	r2, [r3]
 496 0026 5A60     		str	r2, [r3, #4]
 497 0028 9A60     		str	r2, [r3, #8]
 498 002a DA60     		str	r2, [r3, #12]
 499 002c 1A61     		str	r2, [r3, #16]
 500 002e 5A61     		str	r2, [r3, #20]
 501 0030 9A61     		str	r2, [r3, #24]
 174:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 502              		.loc 1 174 34
 503 0032 3B1D     		adds	r3, r7, #4
 504 0034 2022     		movs	r2, #32
 505 0036 0021     		movs	r1, #0
 506 0038 1846     		mov	r0, r3
 507 003a FFF7FEFF 		bl	memset
 175:Core/Src/tim.c **** 
 176:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 1 */
ARM GAS  /tmp/ccYwpN3Z.s 			page 13


 177:Core/Src/tim.c **** 
 178:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 1 */
 179:Core/Src/tim.c ****   htim8.Instance = TIM8;
 508              		.loc 1 179 18
 509 003e 504B     		ldr	r3, .L33
 510 0040 504A     		ldr	r2, .L33+4
 511 0042 1A60     		str	r2, [r3]
 180:Core/Src/tim.c ****   htim8.Init.Prescaler = 84-1;
 512              		.loc 1 180 24
 513 0044 4E4B     		ldr	r3, .L33
 514 0046 5322     		movs	r2, #83
 515 0048 5A60     		str	r2, [r3, #4]
 181:Core/Src/tim.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 516              		.loc 1 181 26
 517 004a 4D4B     		ldr	r3, .L33
 518 004c 0022     		movs	r2, #0
 519 004e 9A60     		str	r2, [r3, #8]
 182:Core/Src/tim.c ****   htim8.Init.Period = 3000-1;
 520              		.loc 1 182 21
 521 0050 4B4B     		ldr	r3, .L33
 522 0052 40F6B732 		movw	r2, #2999
 523 0056 DA60     		str	r2, [r3, #12]
 183:Core/Src/tim.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 524              		.loc 1 183 28
 525 0058 494B     		ldr	r3, .L33
 526 005a 0022     		movs	r2, #0
 527 005c 1A61     		str	r2, [r3, #16]
 184:Core/Src/tim.c ****   htim8.Init.RepetitionCounter = 0;
 528              		.loc 1 184 32
 529 005e 484B     		ldr	r3, .L33
 530 0060 0022     		movs	r2, #0
 531 0062 5A61     		str	r2, [r3, #20]
 185:Core/Src/tim.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 532              		.loc 1 185 32
 533 0064 464B     		ldr	r3, .L33
 534 0066 0022     		movs	r2, #0
 535 0068 9A61     		str	r2, [r3, #24]
 186:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 536              		.loc 1 186 7
 537 006a 4548     		ldr	r0, .L33
 538 006c FFF7FEFF 		bl	HAL_TIM_Base_Init
 539 0070 0346     		mov	r3, r0
 540              		.loc 1 186 6
 541 0072 002B     		cmp	r3, #0
 542 0074 01D0     		beq	.L24
 187:Core/Src/tim.c ****   {
 188:Core/Src/tim.c ****     Error_Handler();
 543              		.loc 1 188 5
 544 0076 FFF7FEFF 		bl	Error_Handler
 545              	.L24:
 189:Core/Src/tim.c ****   }
 190:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 546              		.loc 1 190 34
 547 007a 4FF48053 		mov	r3, #4096
 548 007e BB64     		str	r3, [r7, #72]
 191:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 549              		.loc 1 191 7
ARM GAS  /tmp/ccYwpN3Z.s 			page 14


 550 0080 07F14803 		add	r3, r7, #72
 551 0084 1946     		mov	r1, r3
 552 0086 3E48     		ldr	r0, .L33
 553 0088 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 554 008c 0346     		mov	r3, r0
 555              		.loc 1 191 6
 556 008e 002B     		cmp	r3, #0
 557 0090 01D0     		beq	.L25
 192:Core/Src/tim.c ****   {
 193:Core/Src/tim.c ****     Error_Handler();
 558              		.loc 1 193 5
 559 0092 FFF7FEFF 		bl	Error_Handler
 560              	.L25:
 194:Core/Src/tim.c ****   }
 195:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 561              		.loc 1 195 7
 562 0096 3A48     		ldr	r0, .L33
 563 0098 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 564 009c 0346     		mov	r3, r0
 565              		.loc 1 195 6
 566 009e 002B     		cmp	r3, #0
 567 00a0 01D0     		beq	.L26
 196:Core/Src/tim.c ****   {
 197:Core/Src/tim.c ****     Error_Handler();
 568              		.loc 1 197 5
 569 00a2 FFF7FEFF 		bl	Error_Handler
 570              	.L26:
 198:Core/Src/tim.c ****   }
 199:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 571              		.loc 1 199 37
 572 00a6 0023     		movs	r3, #0
 573 00a8 3B64     		str	r3, [r7, #64]
 200:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 574              		.loc 1 200 33
 575 00aa 0023     		movs	r3, #0
 576 00ac 7B64     		str	r3, [r7, #68]
 201:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 577              		.loc 1 201 7
 578 00ae 07F14003 		add	r3, r7, #64
 579 00b2 1946     		mov	r1, r3
 580 00b4 3248     		ldr	r0, .L33
 581 00b6 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 582 00ba 0346     		mov	r3, r0
 583              		.loc 1 201 6
 584 00bc 002B     		cmp	r3, #0
 585 00be 01D0     		beq	.L27
 202:Core/Src/tim.c ****   {
 203:Core/Src/tim.c ****     Error_Handler();
 586              		.loc 1 203 5
 587 00c0 FFF7FEFF 		bl	Error_Handler
 588              	.L27:
 204:Core/Src/tim.c ****   }
 205:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 589              		.loc 1 205 20
 590 00c4 6023     		movs	r3, #96
 591 00c6 7B62     		str	r3, [r7, #36]
 206:Core/Src/tim.c ****   sConfigOC.Pulse = 0;
ARM GAS  /tmp/ccYwpN3Z.s 			page 15


 592              		.loc 1 206 19
 593 00c8 0023     		movs	r3, #0
 594 00ca BB62     		str	r3, [r7, #40]
 207:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 595              		.loc 1 207 24
 596 00cc 0023     		movs	r3, #0
 597 00ce FB62     		str	r3, [r7, #44]
 208:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 598              		.loc 1 208 25
 599 00d0 0023     		movs	r3, #0
 600 00d2 3B63     		str	r3, [r7, #48]
 209:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 601              		.loc 1 209 24
 602 00d4 0023     		movs	r3, #0
 603 00d6 7B63     		str	r3, [r7, #52]
 210:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 604              		.loc 1 210 25
 605 00d8 0023     		movs	r3, #0
 606 00da BB63     		str	r3, [r7, #56]
 211:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 607              		.loc 1 211 26
 608 00dc 0023     		movs	r3, #0
 609 00de FB63     		str	r3, [r7, #60]
 212:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 610              		.loc 1 212 7
 611 00e0 07F12403 		add	r3, r7, #36
 612 00e4 0022     		movs	r2, #0
 613 00e6 1946     		mov	r1, r3
 614 00e8 2548     		ldr	r0, .L33
 615 00ea FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 616 00ee 0346     		mov	r3, r0
 617              		.loc 1 212 6
 618 00f0 002B     		cmp	r3, #0
 619 00f2 01D0     		beq	.L28
 213:Core/Src/tim.c ****   {
 214:Core/Src/tim.c ****     Error_Handler();
 620              		.loc 1 214 5
 621 00f4 FFF7FEFF 		bl	Error_Handler
 622              	.L28:
 215:Core/Src/tim.c ****   }
 216:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 623              		.loc 1 216 7
 624 00f8 07F12403 		add	r3, r7, #36
 625 00fc 0422     		movs	r2, #4
 626 00fe 1946     		mov	r1, r3
 627 0100 1F48     		ldr	r0, .L33
 628 0102 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 629 0106 0346     		mov	r3, r0
 630              		.loc 1 216 6
 631 0108 002B     		cmp	r3, #0
 632 010a 01D0     		beq	.L29
 217:Core/Src/tim.c ****   {
 218:Core/Src/tim.c ****     Error_Handler();
 633              		.loc 1 218 5
 634 010c FFF7FEFF 		bl	Error_Handler
 635              	.L29:
 219:Core/Src/tim.c ****   }
ARM GAS  /tmp/ccYwpN3Z.s 			page 16


 220:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 636              		.loc 1 220 7
 637 0110 07F12403 		add	r3, r7, #36
 638 0114 0822     		movs	r2, #8
 639 0116 1946     		mov	r1, r3
 640 0118 1948     		ldr	r0, .L33
 641 011a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 642 011e 0346     		mov	r3, r0
 643              		.loc 1 220 6
 644 0120 002B     		cmp	r3, #0
 645 0122 01D0     		beq	.L30
 221:Core/Src/tim.c ****   {
 222:Core/Src/tim.c ****     Error_Handler();
 646              		.loc 1 222 5
 647 0124 FFF7FEFF 		bl	Error_Handler
 648              	.L30:
 223:Core/Src/tim.c ****   }
 224:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 649              		.loc 1 224 7
 650 0128 07F12403 		add	r3, r7, #36
 651 012c 0C22     		movs	r2, #12
 652 012e 1946     		mov	r1, r3
 653 0130 1348     		ldr	r0, .L33
 654 0132 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 655 0136 0346     		mov	r3, r0
 656              		.loc 1 224 6
 657 0138 002B     		cmp	r3, #0
 658 013a 01D0     		beq	.L31
 225:Core/Src/tim.c ****   {
 226:Core/Src/tim.c ****     Error_Handler();
 659              		.loc 1 226 5
 660 013c FFF7FEFF 		bl	Error_Handler
 661              	.L31:
 227:Core/Src/tim.c ****   }
 228:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 662              		.loc 1 228 40
 663 0140 0023     		movs	r3, #0
 664 0142 7B60     		str	r3, [r7, #4]
 229:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 665              		.loc 1 229 41
 666 0144 0023     		movs	r3, #0
 667 0146 BB60     		str	r3, [r7, #8]
 230:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 668              		.loc 1 230 34
 669 0148 0023     		movs	r3, #0
 670 014a FB60     		str	r3, [r7, #12]
 231:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 671              		.loc 1 231 33
 672 014c 0023     		movs	r3, #0
 673 014e 3B61     		str	r3, [r7, #16]
 232:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 674              		.loc 1 232 35
 675 0150 0023     		movs	r3, #0
 676 0152 7B61     		str	r3, [r7, #20]
 233:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 677              		.loc 1 233 38
 678 0154 4FF40053 		mov	r3, #8192
ARM GAS  /tmp/ccYwpN3Z.s 			page 17


 679 0158 BB61     		str	r3, [r7, #24]
 234:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 680              		.loc 1 234 40
 681 015a 0023     		movs	r3, #0
 682 015c 3B62     		str	r3, [r7, #32]
 235:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 683              		.loc 1 235 7
 684 015e 3B1D     		adds	r3, r7, #4
 685 0160 1946     		mov	r1, r3
 686 0162 0748     		ldr	r0, .L33
 687 0164 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 688 0168 0346     		mov	r3, r0
 689              		.loc 1 235 6
 690 016a 002B     		cmp	r3, #0
 691 016c 01D0     		beq	.L32
 236:Core/Src/tim.c ****   {
 237:Core/Src/tim.c ****     Error_Handler();
 692              		.loc 1 237 5
 693 016e FFF7FEFF 		bl	Error_Handler
 694              	.L32:
 238:Core/Src/tim.c ****   }
 239:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 2 */
 240:Core/Src/tim.c **** 
 241:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 2 */
 242:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim8);
 695              		.loc 1 242 3
 696 0172 0348     		ldr	r0, .L33
 697 0174 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 243:Core/Src/tim.c **** 
 244:Core/Src/tim.c **** }
 698              		.loc 1 244 1
 699 0178 00BF     		nop
 700 017a 5837     		adds	r7, r7, #88
 701              	.LCFI13:
 702              		.cfi_def_cfa_offset 8
 703 017c BD46     		mov	sp, r7
 704              	.LCFI14:
 705              		.cfi_def_cfa_register 13
 706              		@ sp needed
 707 017e 80BD     		pop	{r7, pc}
 708              	.L34:
 709              		.align	2
 710              	.L33:
 711 0180 00000000 		.word	htim8
 712 0184 00040140 		.word	1073808384
 713              		.cfi_endproc
 714              	.LFE132:
 716              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 717              		.align	1
 718              		.global	HAL_TIM_Base_MspInit
 719              		.syntax unified
 720              		.thumb
 721              		.thumb_func
 723              	HAL_TIM_Base_MspInit:
 724              	.LFB133:
 245:Core/Src/tim.c **** 
 246:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
ARM GAS  /tmp/ccYwpN3Z.s 			page 18


 247:Core/Src/tim.c **** {
 725              		.loc 1 247 1
 726              		.cfi_startproc
 727              		@ args = 0, pretend = 0, frame = 24
 728              		@ frame_needed = 1, uses_anonymous_args = 0
 729              		@ link register save eliminated.
 730 0000 80B4     		push	{r7}
 731              	.LCFI15:
 732              		.cfi_def_cfa_offset 4
 733              		.cfi_offset 7, -4
 734 0002 87B0     		sub	sp, sp, #28
 735              	.LCFI16:
 736              		.cfi_def_cfa_offset 32
 737 0004 00AF     		add	r7, sp, #0
 738              	.LCFI17:
 739              		.cfi_def_cfa_register 7
 740 0006 7860     		str	r0, [r7, #4]
 248:Core/Src/tim.c **** 
 249:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM2)
 741              		.loc 1 249 20
 742 0008 7B68     		ldr	r3, [r7, #4]
 743 000a 1B68     		ldr	r3, [r3]
 744              		.loc 1 249 5
 745 000c B3F1804F 		cmp	r3, #1073741824
 746 0010 0ED1     		bne	.L36
 747              	.LBB2:
 250:Core/Src/tim.c ****   {
 251:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 252:Core/Src/tim.c **** 
 253:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 0 */
 254:Core/Src/tim.c ****     /* TIM2 clock enable */
 255:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_ENABLE();
 748              		.loc 1 255 5
 749 0012 0023     		movs	r3, #0
 750 0014 7B61     		str	r3, [r7, #20]
 751 0016 1D4B     		ldr	r3, .L40
 752 0018 1B6C     		ldr	r3, [r3, #64]
 753 001a 1C4A     		ldr	r2, .L40
 754 001c 43F00103 		orr	r3, r3, #1
 755 0020 1364     		str	r3, [r2, #64]
 756 0022 1A4B     		ldr	r3, .L40
 757 0024 1B6C     		ldr	r3, [r3, #64]
 758 0026 03F00103 		and	r3, r3, #1
 759 002a 7B61     		str	r3, [r7, #20]
 760 002c 7B69     		ldr	r3, [r7, #20]
 761              	.LBE2:
 256:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 257:Core/Src/tim.c **** 
 258:Core/Src/tim.c ****   /* USER CODE END TIM2_MspInit 1 */
 259:Core/Src/tim.c ****   }
 260:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM4)
 261:Core/Src/tim.c ****   {
 262:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspInit 0 */
 263:Core/Src/tim.c **** 
 264:Core/Src/tim.c ****   /* USER CODE END TIM4_MspInit 0 */
 265:Core/Src/tim.c ****     /* TIM4 clock enable */
 266:Core/Src/tim.c ****     __HAL_RCC_TIM4_CLK_ENABLE();
ARM GAS  /tmp/ccYwpN3Z.s 			page 19


 267:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 268:Core/Src/tim.c **** 
 269:Core/Src/tim.c ****   /* USER CODE END TIM4_MspInit 1 */
 270:Core/Src/tim.c ****   }
 271:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM8)
 272:Core/Src/tim.c ****   {
 273:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 0 */
 274:Core/Src/tim.c **** 
 275:Core/Src/tim.c ****   /* USER CODE END TIM8_MspInit 0 */
 276:Core/Src/tim.c ****     /* TIM8 clock enable */
 277:Core/Src/tim.c ****     __HAL_RCC_TIM8_CLK_ENABLE();
 278:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 279:Core/Src/tim.c **** 
 280:Core/Src/tim.c ****   /* USER CODE END TIM8_MspInit 1 */
 281:Core/Src/tim.c ****   }
 282:Core/Src/tim.c **** }
 762              		.loc 1 282 1
 763 002e 26E0     		b	.L39
 764              	.L36:
 260:Core/Src/tim.c ****   {
 765              		.loc 1 260 25
 766 0030 7B68     		ldr	r3, [r7, #4]
 767 0032 1B68     		ldr	r3, [r3]
 260:Core/Src/tim.c ****   {
 768              		.loc 1 260 10
 769 0034 164A     		ldr	r2, .L40+4
 770 0036 9342     		cmp	r3, r2
 771 0038 0ED1     		bne	.L38
 772              	.LBB3:
 266:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspInit 1 */
 773              		.loc 1 266 5
 774 003a 0023     		movs	r3, #0
 775 003c 3B61     		str	r3, [r7, #16]
 776 003e 134B     		ldr	r3, .L40
 777 0040 1B6C     		ldr	r3, [r3, #64]
 778 0042 124A     		ldr	r2, .L40
 779 0044 43F00403 		orr	r3, r3, #4
 780 0048 1364     		str	r3, [r2, #64]
 781 004a 104B     		ldr	r3, .L40
 782 004c 1B6C     		ldr	r3, [r3, #64]
 783 004e 03F00403 		and	r3, r3, #4
 784 0052 3B61     		str	r3, [r7, #16]
 785 0054 3B69     		ldr	r3, [r7, #16]
 786              	.LBE3:
 787              		.loc 1 282 1
 788 0056 12E0     		b	.L39
 789              	.L38:
 271:Core/Src/tim.c ****   {
 790              		.loc 1 271 25
 791 0058 7B68     		ldr	r3, [r7, #4]
 792 005a 1B68     		ldr	r3, [r3]
 271:Core/Src/tim.c ****   {
 793              		.loc 1 271 10
 794 005c 0D4A     		ldr	r2, .L40+8
 795 005e 9342     		cmp	r3, r2
 796 0060 0DD1     		bne	.L39
 797              	.LBB4:
ARM GAS  /tmp/ccYwpN3Z.s 			page 20


 277:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 798              		.loc 1 277 5
 799 0062 0023     		movs	r3, #0
 800 0064 FB60     		str	r3, [r7, #12]
 801 0066 094B     		ldr	r3, .L40
 802 0068 5B6C     		ldr	r3, [r3, #68]
 803 006a 084A     		ldr	r2, .L40
 804 006c 43F00203 		orr	r3, r3, #2
 805 0070 5364     		str	r3, [r2, #68]
 806 0072 064B     		ldr	r3, .L40
 807 0074 5B6C     		ldr	r3, [r3, #68]
 808 0076 03F00203 		and	r3, r3, #2
 809 007a FB60     		str	r3, [r7, #12]
 810 007c FB68     		ldr	r3, [r7, #12]
 811              	.L39:
 812              	.LBE4:
 813              		.loc 1 282 1
 814 007e 00BF     		nop
 815 0080 1C37     		adds	r7, r7, #28
 816              	.LCFI18:
 817              		.cfi_def_cfa_offset 4
 818 0082 BD46     		mov	sp, r7
 819              	.LCFI19:
 820              		.cfi_def_cfa_register 13
 821              		@ sp needed
 822 0084 5DF8047B 		ldr	r7, [sp], #4
 823              	.LCFI20:
 824              		.cfi_restore 7
 825              		.cfi_def_cfa_offset 0
 826 0088 7047     		bx	lr
 827              	.L41:
 828 008a 00BF     		.align	2
 829              	.L40:
 830 008c 00380240 		.word	1073887232
 831 0090 00080040 		.word	1073743872
 832 0094 00040140 		.word	1073808384
 833              		.cfi_endproc
 834              	.LFE133:
 836              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 837              		.align	1
 838              		.global	HAL_TIM_MspPostInit
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 843              	HAL_TIM_MspPostInit:
 844              	.LFB134:
 283:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 284:Core/Src/tim.c **** {
 845              		.loc 1 284 1
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 40
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849 0000 80B5     		push	{r7, lr}
 850              	.LCFI21:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 7, -8
 853              		.cfi_offset 14, -4
ARM GAS  /tmp/ccYwpN3Z.s 			page 21


 854 0002 8AB0     		sub	sp, sp, #40
 855              	.LCFI22:
 856              		.cfi_def_cfa_offset 48
 857 0004 00AF     		add	r7, sp, #0
 858              	.LCFI23:
 859              		.cfi_def_cfa_register 7
 860 0006 7860     		str	r0, [r7, #4]
 285:Core/Src/tim.c **** 
 286:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 861              		.loc 1 286 20
 862 0008 07F11403 		add	r3, r7, #20
 863 000c 0022     		movs	r2, #0
 864 000e 1A60     		str	r2, [r3]
 865 0010 5A60     		str	r2, [r3, #4]
 866 0012 9A60     		str	r2, [r3, #8]
 867 0014 DA60     		str	r2, [r3, #12]
 868 0016 1A61     		str	r2, [r3, #16]
 287:Core/Src/tim.c ****   if(timHandle->Instance==TIM2)
 869              		.loc 1 287 15
 870 0018 7B68     		ldr	r3, [r7, #4]
 871 001a 1B68     		ldr	r3, [r3]
 872              		.loc 1 287 5
 873 001c B3F1804F 		cmp	r3, #1073741824
 874 0020 1ED1     		bne	.L43
 875              	.LBB5:
 288:Core/Src/tim.c ****   {
 289:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspPostInit 0 */
 290:Core/Src/tim.c **** 
 291:Core/Src/tim.c ****   /* USER CODE END TIM2_MspPostInit 0 */
 292:Core/Src/tim.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 876              		.loc 1 292 5
 877 0022 0023     		movs	r3, #0
 878 0024 3B61     		str	r3, [r7, #16]
 879 0026 354B     		ldr	r3, .L47
 880 0028 1B6B     		ldr	r3, [r3, #48]
 881 002a 344A     		ldr	r2, .L47
 882 002c 43F00103 		orr	r3, r3, #1
 883 0030 1363     		str	r3, [r2, #48]
 884 0032 324B     		ldr	r3, .L47
 885 0034 1B6B     		ldr	r3, [r3, #48]
 886 0036 03F00103 		and	r3, r3, #1
 887 003a 3B61     		str	r3, [r7, #16]
 888 003c 3B69     		ldr	r3, [r7, #16]
 889              	.LBE5:
 293:Core/Src/tim.c ****     /**TIM2 GPIO Configuration
 294:Core/Src/tim.c ****     PA1     ------> TIM2_CH2
 295:Core/Src/tim.c ****     PA2     ------> TIM2_CH3
 296:Core/Src/tim.c ****     PA3     ------> TIM2_CH4
 297:Core/Src/tim.c ****     PA5     ------> TIM2_CH1
 298:Core/Src/tim.c ****     */
 299:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_5;
 890              		.loc 1 299 25
 891 003e 2E23     		movs	r3, #46
 892 0040 7B61     		str	r3, [r7, #20]
 300:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 893              		.loc 1 300 26
 894 0042 0223     		movs	r3, #2
ARM GAS  /tmp/ccYwpN3Z.s 			page 22


 895 0044 BB61     		str	r3, [r7, #24]
 301:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 896              		.loc 1 301 26
 897 0046 0023     		movs	r3, #0
 898 0048 FB61     		str	r3, [r7, #28]
 302:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 899              		.loc 1 302 27
 900 004a 0023     		movs	r3, #0
 901 004c 3B62     		str	r3, [r7, #32]
 303:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 902              		.loc 1 303 31
 903 004e 0123     		movs	r3, #1
 904 0050 7B62     		str	r3, [r7, #36]
 304:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 905              		.loc 1 304 5
 906 0052 07F11403 		add	r3, r7, #20
 907 0056 1946     		mov	r1, r3
 908 0058 2948     		ldr	r0, .L47+4
 909 005a FFF7FEFF 		bl	HAL_GPIO_Init
 305:Core/Src/tim.c **** 
 306:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspPostInit 1 */
 307:Core/Src/tim.c **** 
 308:Core/Src/tim.c ****   /* USER CODE END TIM2_MspPostInit 1 */
 309:Core/Src/tim.c ****   }
 310:Core/Src/tim.c ****   else if(timHandle->Instance==TIM4)
 311:Core/Src/tim.c ****   {
 312:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspPostInit 0 */
 313:Core/Src/tim.c **** 
 314:Core/Src/tim.c ****   /* USER CODE END TIM4_MspPostInit 0 */
 315:Core/Src/tim.c **** 
 316:Core/Src/tim.c ****     __HAL_RCC_GPIOD_CLK_ENABLE();
 317:Core/Src/tim.c ****     /**TIM4 GPIO Configuration
 318:Core/Src/tim.c ****     PD12     ------> TIM4_CH1
 319:Core/Src/tim.c ****     PD13     ------> TIM4_CH2
 320:Core/Src/tim.c ****     PD14     ------> TIM4_CH3
 321:Core/Src/tim.c ****     PD15     ------> TIM4_CH4
 322:Core/Src/tim.c ****     */
 323:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
 324:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 325:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 326:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 327:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 328:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 329:Core/Src/tim.c **** 
 330:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspPostInit 1 */
 331:Core/Src/tim.c **** 
 332:Core/Src/tim.c ****   /* USER CODE END TIM4_MspPostInit 1 */
 333:Core/Src/tim.c ****   }
 334:Core/Src/tim.c ****   else if(timHandle->Instance==TIM8)
 335:Core/Src/tim.c ****   {
 336:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspPostInit 0 */
 337:Core/Src/tim.c **** 
 338:Core/Src/tim.c ****   /* USER CODE END TIM8_MspPostInit 0 */
 339:Core/Src/tim.c **** 
 340:Core/Src/tim.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 341:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 342:Core/Src/tim.c ****     PC6     ------> TIM8_CH1
ARM GAS  /tmp/ccYwpN3Z.s 			page 23


 343:Core/Src/tim.c ****     PC7     ------> TIM8_CH2
 344:Core/Src/tim.c ****     PC8     ------> TIM8_CH3
 345:Core/Src/tim.c ****     PC9     ------> TIM8_CH4
 346:Core/Src/tim.c ****     */
 347:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 348:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 349:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 350:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 351:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 352:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 353:Core/Src/tim.c **** 
 354:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspPostInit 1 */
 355:Core/Src/tim.c **** 
 356:Core/Src/tim.c ****   /* USER CODE END TIM8_MspPostInit 1 */
 357:Core/Src/tim.c ****   }
 358:Core/Src/tim.c **** 
 359:Core/Src/tim.c **** }
 910              		.loc 1 359 1
 911 005e 48E0     		b	.L46
 912              	.L43:
 310:Core/Src/tim.c ****   {
 913              		.loc 1 310 20
 914 0060 7B68     		ldr	r3, [r7, #4]
 915 0062 1B68     		ldr	r3, [r3]
 310:Core/Src/tim.c ****   {
 916              		.loc 1 310 10
 917 0064 274A     		ldr	r2, .L47+8
 918 0066 9342     		cmp	r3, r2
 919 0068 1FD1     		bne	.L45
 920              	.LBB6:
 316:Core/Src/tim.c ****     /**TIM4 GPIO Configuration
 921              		.loc 1 316 5
 922 006a 0023     		movs	r3, #0
 923 006c FB60     		str	r3, [r7, #12]
 924 006e 234B     		ldr	r3, .L47
 925 0070 1B6B     		ldr	r3, [r3, #48]
 926 0072 224A     		ldr	r2, .L47
 927 0074 43F00803 		orr	r3, r3, #8
 928 0078 1363     		str	r3, [r2, #48]
 929 007a 204B     		ldr	r3, .L47
 930 007c 1B6B     		ldr	r3, [r3, #48]
 931 007e 03F00803 		and	r3, r3, #8
 932 0082 FB60     		str	r3, [r7, #12]
 933 0084 FB68     		ldr	r3, [r7, #12]
 934              	.LBE6:
 323:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 935              		.loc 1 323 25
 936 0086 4FF47043 		mov	r3, #61440
 937 008a 7B61     		str	r3, [r7, #20]
 324:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 938              		.loc 1 324 26
 939 008c 0223     		movs	r3, #2
 940 008e BB61     		str	r3, [r7, #24]
 325:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 941              		.loc 1 325 26
 942 0090 0023     		movs	r3, #0
 943 0092 FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/ccYwpN3Z.s 			page 24


 326:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 944              		.loc 1 326 27
 945 0094 0023     		movs	r3, #0
 946 0096 3B62     		str	r3, [r7, #32]
 327:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 947              		.loc 1 327 31
 948 0098 0223     		movs	r3, #2
 949 009a 7B62     		str	r3, [r7, #36]
 328:Core/Src/tim.c **** 
 950              		.loc 1 328 5
 951 009c 07F11403 		add	r3, r7, #20
 952 00a0 1946     		mov	r1, r3
 953 00a2 1948     		ldr	r0, .L47+12
 954 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 955              		.loc 1 359 1
 956 00a8 23E0     		b	.L46
 957              	.L45:
 334:Core/Src/tim.c ****   {
 958              		.loc 1 334 20
 959 00aa 7B68     		ldr	r3, [r7, #4]
 960 00ac 1B68     		ldr	r3, [r3]
 334:Core/Src/tim.c ****   {
 961              		.loc 1 334 10
 962 00ae 174A     		ldr	r2, .L47+16
 963 00b0 9342     		cmp	r3, r2
 964 00b2 1ED1     		bne	.L46
 965              	.LBB7:
 340:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 966              		.loc 1 340 5
 967 00b4 0023     		movs	r3, #0
 968 00b6 BB60     		str	r3, [r7, #8]
 969 00b8 104B     		ldr	r3, .L47
 970 00ba 1B6B     		ldr	r3, [r3, #48]
 971 00bc 0F4A     		ldr	r2, .L47
 972 00be 43F00403 		orr	r3, r3, #4
 973 00c2 1363     		str	r3, [r2, #48]
 974 00c4 0D4B     		ldr	r3, .L47
 975 00c6 1B6B     		ldr	r3, [r3, #48]
 976 00c8 03F00403 		and	r3, r3, #4
 977 00cc BB60     		str	r3, [r7, #8]
 978 00ce BB68     		ldr	r3, [r7, #8]
 979              	.LBE7:
 347:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 980              		.loc 1 347 25
 981 00d0 4FF47073 		mov	r3, #960
 982 00d4 7B61     		str	r3, [r7, #20]
 348:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 983              		.loc 1 348 26
 984 00d6 0223     		movs	r3, #2
 985 00d8 BB61     		str	r3, [r7, #24]
 349:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 986              		.loc 1 349 26
 987 00da 0023     		movs	r3, #0
 988 00dc FB61     		str	r3, [r7, #28]
 350:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 989              		.loc 1 350 27
 990 00de 0023     		movs	r3, #0
ARM GAS  /tmp/ccYwpN3Z.s 			page 25


 991 00e0 3B62     		str	r3, [r7, #32]
 351:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 992              		.loc 1 351 31
 993 00e2 0323     		movs	r3, #3
 994 00e4 7B62     		str	r3, [r7, #36]
 352:Core/Src/tim.c **** 
 995              		.loc 1 352 5
 996 00e6 07F11403 		add	r3, r7, #20
 997 00ea 1946     		mov	r1, r3
 998 00ec 0848     		ldr	r0, .L47+20
 999 00ee FFF7FEFF 		bl	HAL_GPIO_Init
 1000              	.L46:
 1001              		.loc 1 359 1
 1002 00f2 00BF     		nop
 1003 00f4 2837     		adds	r7, r7, #40
 1004              	.LCFI24:
 1005              		.cfi_def_cfa_offset 8
 1006 00f6 BD46     		mov	sp, r7
 1007              	.LCFI25:
 1008              		.cfi_def_cfa_register 13
 1009              		@ sp needed
 1010 00f8 80BD     		pop	{r7, pc}
 1011              	.L48:
 1012 00fa 00BF     		.align	2
 1013              	.L47:
 1014 00fc 00380240 		.word	1073887232
 1015 0100 00000240 		.word	1073872896
 1016 0104 00080040 		.word	1073743872
 1017 0108 000C0240 		.word	1073875968
 1018 010c 00040140 		.word	1073808384
 1019 0110 00080240 		.word	1073874944
 1020              		.cfi_endproc
 1021              	.LFE134:
 1023              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 1024              		.align	1
 1025              		.global	HAL_TIM_Base_MspDeInit
 1026              		.syntax unified
 1027              		.thumb
 1028              		.thumb_func
 1030              	HAL_TIM_Base_MspDeInit:
 1031              	.LFB135:
 360:Core/Src/tim.c **** 
 361:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 362:Core/Src/tim.c **** {
 1032              		.loc 1 362 1
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 8
 1035              		@ frame_needed = 1, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
 1037 0000 80B4     		push	{r7}
 1038              	.LCFI26:
 1039              		.cfi_def_cfa_offset 4
 1040              		.cfi_offset 7, -4
 1041 0002 83B0     		sub	sp, sp, #12
 1042              	.LCFI27:
 1043              		.cfi_def_cfa_offset 16
 1044 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccYwpN3Z.s 			page 26


 1045              	.LCFI28:
 1046              		.cfi_def_cfa_register 7
 1047 0006 7860     		str	r0, [r7, #4]
 363:Core/Src/tim.c **** 
 364:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM2)
 1048              		.loc 1 364 20
 1049 0008 7B68     		ldr	r3, [r7, #4]
 1050 000a 1B68     		ldr	r3, [r3]
 1051              		.loc 1 364 5
 1052 000c B3F1804F 		cmp	r3, #1073741824
 1053 0010 06D1     		bne	.L50
 365:Core/Src/tim.c ****   {
 366:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 367:Core/Src/tim.c **** 
 368:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 0 */
 369:Core/Src/tim.c ****     /* Peripheral clock disable */
 370:Core/Src/tim.c ****     __HAL_RCC_TIM2_CLK_DISABLE();
 1054              		.loc 1 370 5
 1055 0012 124B     		ldr	r3, .L54
 1056 0014 1B6C     		ldr	r3, [r3, #64]
 1057 0016 114A     		ldr	r2, .L54
 1058 0018 23F00103 		bic	r3, r3, #1
 1059 001c 1364     		str	r3, [r2, #64]
 371:Core/Src/tim.c ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 372:Core/Src/tim.c **** 
 373:Core/Src/tim.c ****   /* USER CODE END TIM2_MspDeInit 1 */
 374:Core/Src/tim.c ****   }
 375:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM4)
 376:Core/Src/tim.c ****   {
 377:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspDeInit 0 */
 378:Core/Src/tim.c **** 
 379:Core/Src/tim.c ****   /* USER CODE END TIM4_MspDeInit 0 */
 380:Core/Src/tim.c ****     /* Peripheral clock disable */
 381:Core/Src/tim.c ****     __HAL_RCC_TIM4_CLK_DISABLE();
 382:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 383:Core/Src/tim.c **** 
 384:Core/Src/tim.c ****   /* USER CODE END TIM4_MspDeInit 1 */
 385:Core/Src/tim.c ****   }
 386:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM8)
 387:Core/Src/tim.c ****   {
 388:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 0 */
 389:Core/Src/tim.c **** 
 390:Core/Src/tim.c ****   /* USER CODE END TIM8_MspDeInit 0 */
 391:Core/Src/tim.c ****     /* Peripheral clock disable */
 392:Core/Src/tim.c ****     __HAL_RCC_TIM8_CLK_DISABLE();
 393:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 394:Core/Src/tim.c **** 
 395:Core/Src/tim.c ****   /* USER CODE END TIM8_MspDeInit 1 */
 396:Core/Src/tim.c ****   }
 397:Core/Src/tim.c **** }
 1060              		.loc 1 397 1
 1061 001e 16E0     		b	.L53
 1062              	.L50:
 375:Core/Src/tim.c ****   {
 1063              		.loc 1 375 25
 1064 0020 7B68     		ldr	r3, [r7, #4]
 1065 0022 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccYwpN3Z.s 			page 27


 375:Core/Src/tim.c ****   {
 1066              		.loc 1 375 10
 1067 0024 0E4A     		ldr	r2, .L54+4
 1068 0026 9342     		cmp	r3, r2
 1069 0028 06D1     		bne	.L52
 381:Core/Src/tim.c ****   /* USER CODE BEGIN TIM4_MspDeInit 1 */
 1070              		.loc 1 381 5
 1071 002a 0C4B     		ldr	r3, .L54
 1072 002c 1B6C     		ldr	r3, [r3, #64]
 1073 002e 0B4A     		ldr	r2, .L54
 1074 0030 23F00403 		bic	r3, r3, #4
 1075 0034 1364     		str	r3, [r2, #64]
 1076              		.loc 1 397 1
 1077 0036 0AE0     		b	.L53
 1078              	.L52:
 386:Core/Src/tim.c ****   {
 1079              		.loc 1 386 25
 1080 0038 7B68     		ldr	r3, [r7, #4]
 1081 003a 1B68     		ldr	r3, [r3]
 386:Core/Src/tim.c ****   {
 1082              		.loc 1 386 10
 1083 003c 094A     		ldr	r2, .L54+8
 1084 003e 9342     		cmp	r3, r2
 1085 0040 05D1     		bne	.L53
 392:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 1086              		.loc 1 392 5
 1087 0042 064B     		ldr	r3, .L54
 1088 0044 5B6C     		ldr	r3, [r3, #68]
 1089 0046 054A     		ldr	r2, .L54
 1090 0048 23F00203 		bic	r3, r3, #2
 1091 004c 5364     		str	r3, [r2, #68]
 1092              	.L53:
 1093              		.loc 1 397 1
 1094 004e 00BF     		nop
 1095 0050 0C37     		adds	r7, r7, #12
 1096              	.LCFI29:
 1097              		.cfi_def_cfa_offset 4
 1098 0052 BD46     		mov	sp, r7
 1099              	.LCFI30:
 1100              		.cfi_def_cfa_register 13
 1101              		@ sp needed
 1102 0054 5DF8047B 		ldr	r7, [sp], #4
 1103              	.LCFI31:
 1104              		.cfi_restore 7
 1105              		.cfi_def_cfa_offset 0
 1106 0058 7047     		bx	lr
 1107              	.L55:
 1108 005a 00BF     		.align	2
 1109              	.L54:
 1110 005c 00380240 		.word	1073887232
 1111 0060 00080040 		.word	1073743872
 1112 0064 00040140 		.word	1073808384
 1113              		.cfi_endproc
 1114              	.LFE135:
 1116              		.text
 1117              	.Letext0:
 1118              		.file 2 "/home/zhc/stm32_tool/arm-gnu-toolchain-11.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/inclu
ARM GAS  /tmp/ccYwpN3Z.s 			page 28


 1119              		.file 3 "/home/zhc/stm32_tool/arm-gnu-toolchain-11.3.rel1-x86_64-arm-none-eabi/arm-none-eabi/inclu
 1120              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1121              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1122              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1123              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1124              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1125              		.file 9 "Core/Inc/tim.h"
 1126              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1127              		.file 11 "Core/Inc/main.h"
ARM GAS  /tmp/ccYwpN3Z.s 			page 29


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
     /tmp/ccYwpN3Z.s:24     .bss.htim2:0000000000000000 htim2
     /tmp/ccYwpN3Z.s:21     .bss.htim2:0000000000000000 $d
     /tmp/ccYwpN3Z.s:31     .bss.htim4:0000000000000000 htim4
     /tmp/ccYwpN3Z.s:28     .bss.htim4:0000000000000000 $d
     /tmp/ccYwpN3Z.s:38     .bss.htim8:0000000000000000 htim8
     /tmp/ccYwpN3Z.s:35     .bss.htim8:0000000000000000 $d
     /tmp/ccYwpN3Z.s:41     .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccYwpN3Z.s:47     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccYwpN3Z.s:843    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
     /tmp/ccYwpN3Z.s:244    .text.MX_TIM2_Init:0000000000000128 $d
     /tmp/ccYwpN3Z.s:249    .text.MX_TIM4_Init:0000000000000000 $t
     /tmp/ccYwpN3Z.s:255    .text.MX_TIM4_Init:0000000000000000 MX_TIM4_Init
     /tmp/ccYwpN3Z.s:451    .text.MX_TIM4_Init:0000000000000128 $d
     /tmp/ccYwpN3Z.s:457    .text.MX_TIM8_Init:0000000000000000 $t
     /tmp/ccYwpN3Z.s:463    .text.MX_TIM8_Init:0000000000000000 MX_TIM8_Init
     /tmp/ccYwpN3Z.s:711    .text.MX_TIM8_Init:0000000000000180 $d
     /tmp/ccYwpN3Z.s:717    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccYwpN3Z.s:723    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccYwpN3Z.s:830    .text.HAL_TIM_Base_MspInit:000000000000008c $d
     /tmp/ccYwpN3Z.s:837    .text.HAL_TIM_MspPostInit:0000000000000000 $t
     /tmp/ccYwpN3Z.s:1014   .text.HAL_TIM_MspPostInit:00000000000000fc $d
     /tmp/ccYwpN3Z.s:1024   .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccYwpN3Z.s:1030   .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccYwpN3Z.s:1110   .text.HAL_TIM_Base_MspDeInit:000000000000005c $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
Error_Handler
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
memset
HAL_TIMEx_ConfigBreakDeadTime
HAL_GPIO_Init
